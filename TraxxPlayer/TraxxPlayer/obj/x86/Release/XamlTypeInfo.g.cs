//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace TraxxPlayer
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace TraxxPlayer.TraxxPlayer_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[89];
            _typeNameTable[0] = "Template10.Common.BootStrapper";
            _typeNameTable[1] = "Windows.UI.Xaml.Application";
            _typeNameTable[2] = "Template10.Common.StateItems";
            _typeNameTable[3] = "System.Collections.Generic.Dictionary`2<String, Object>";
            _typeNameTable[4] = "Object";
            _typeNameTable[5] = "String";
            _typeNameTable[6] = "Template10.Services.NavigationService.INavigationService";
            _typeNameTable[7] = "System.Func`2<Windows.ApplicationModel.Activation.SplashScreen, Windows.UI.Xaml.Controls.UserControl>";
            _typeNameTable[8] = "System.MulticastDelegate";
            _typeNameTable[9] = "System.Delegate";
            _typeNameTable[10] = "TimeSpan";
            _typeNameTable[11] = "System.ValueType";
            _typeNameTable[12] = "Boolean";
            _typeNameTable[13] = "Windows.ApplicationModel.Activation.IActivatedEventArgs";
            _typeNameTable[14] = "Template10.Common.BootStrapper.States";
            _typeNameTable[15] = "System.Enum";
            _typeNameTable[16] = "Template10.Controls.ModalDialog";
            _typeNameTable[17] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[18] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[19] = "TraxxPlayer.ViewModels.LikesViewModel";
            _typeNameTable[20] = "Template10.Mvvm.ViewModelBase";
            _typeNameTable[21] = "Template10.Mvvm.BindableBase";
            _typeNameTable[22] = "System.Collections.ObjectModel.ObservableCollection`1<BackgroundAudioShared.SoundCloudTrack>";
            _typeNameTable[23] = "System.Collections.ObjectModel.Collection`1<BackgroundAudioShared.SoundCloudTrack>";
            _typeNameTable[24] = "BackgroundAudioShared.SoundCloudTrack";
            _typeNameTable[25] = "Int32";
            _typeNameTable[26] = "BackgroundAudioShared.SoundCloudUser";
            _typeNameTable[27] = "BackgroundAudioShared.SoundCloudCreatedWith";
            _typeNameTable[28] = "Template10.Common.IDispatcherWrapper";
            _typeNameTable[29] = "Template10.Common.IStateItems";
            _typeNameTable[30] = "Template10.Controls.PageHeader";
            _typeNameTable[31] = "Windows.UI.Xaml.Controls.CommandBar";
            _typeNameTable[32] = "Windows.UI.Xaml.Controls.Frame";
            _typeNameTable[33] = "Template10.Behaviors.EllipsisBehavior.Visibilities";
            _typeNameTable[34] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[35] = "Windows.UI.Xaml.Controls.Symbol";
            _typeNameTable[36] = "Double";
            _typeNameTable[37] = "TraxxPlayer.Views.Likes";
            _typeNameTable[38] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[39] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[40] = "TraxxPlayer.ViewModels.MeViewModel";
            _typeNameTable[41] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[42] = "TraxxPlayer.Views.Me";
            _typeNameTable[43] = "TraxxPlayer.ViewModels.NowPlayingViewModel";
            _typeNameTable[44] = "TraxxPlayer.Views.NowPlaying";
            _typeNameTable[45] = "Windows.UI.Color";
            _typeNameTable[46] = "Byte";
            _typeNameTable[47] = "Template10.Controls.HamburgerMenu";
            _typeNameTable[48] = "System.Collections.ObjectModel.ObservableCollection`1<Template10.Controls.HamburgerButtonInfo>";
            _typeNameTable[49] = "System.Collections.ObjectModel.Collection`1<Template10.Controls.HamburgerButtonInfo>";
            _typeNameTable[50] = "Template10.Controls.HamburgerButtonInfo";
            _typeNameTable[51] = "Template10.Mvvm.DependencyBindableBase";
            _typeNameTable[52] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[53] = "Template10.Controls.HamburgerButtonInfo.ButtonTypes";
            _typeNameTable[54] = "Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo";
            _typeNameTable[55] = "System.Windows.Input.ICommand";
            _typeNameTable[56] = "System.Type";
            _typeNameTable[57] = "System.Nullable`1<Boolean>";
            _typeNameTable[58] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[59] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[60] = "Windows.UI.Xaml.Controls.SplitViewDisplayMode";
            _typeNameTable[61] = "Windows.UI.Xaml.Controls.Orientation";
            _typeNameTable[62] = "Template10.Controls.HamburgerMenu.OpenCloseModes";
            _typeNameTable[63] = "Template10.Mvvm.DelegateCommand`1<Template10.Controls.HamburgerButtonInfo>";
            _typeNameTable[64] = "Template10.Controls.Resizer";
            _typeNameTable[65] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[66] = "Windows.Foundation.Size";
            _typeNameTable[67] = "TraxxPlayer.Views.Busy";
            _typeNameTable[68] = "TraxxPlayer.ViewModels.DetailPageViewModel";
            _typeNameTable[69] = "TraxxPlayer.Views.DetailPage";
            _typeNameTable[70] = "TraxxPlayer.ViewModels.MainPageViewModel";
            _typeNameTable[71] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[72] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[73] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[74] = "Template10.Behaviors.KeyBehavior";
            _typeNameTable[75] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[76] = "Windows.System.VirtualKey";
            _typeNameTable[77] = "Template10.Behaviors.KeyBehavior.Kinds";
            _typeNameTable[78] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[79] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[80] = "Template10.Behaviors.FocusAction";
            _typeNameTable[81] = "Microsoft.Xaml.Interactions.Core.CallMethodAction";
            _typeNameTable[82] = "TraxxPlayer.Views.MainPage";
            _typeNameTable[83] = "TraxxPlayer.ViewModels.SettingsPageViewModel";
            _typeNameTable[84] = "TraxxPlayer.ViewModels.SettingsPartViewModel";
            _typeNameTable[85] = "TraxxPlayer.ViewModels.AboutPartViewModel";
            _typeNameTable[86] = "TraxxPlayer.Views.SettingsPage";
            _typeNameTable[87] = "TraxxPlayer.Views.Shell";
            _typeNameTable[88] = "TraxxPlayer.Views.Splash";

            _typeTable = new global::System.Type[89];
            _typeTable[0] = typeof(global::Template10.Common.BootStrapper);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Application);
            _typeTable[2] = typeof(global::Template10.Common.StateItems);
            _typeTable[3] = typeof(global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>);
            _typeTable[4] = typeof(global::System.Object);
            _typeTable[5] = typeof(global::System.String);
            _typeTable[6] = typeof(global::Template10.Services.NavigationService.INavigationService);
            _typeTable[7] = typeof(global::System.Func<global::Windows.ApplicationModel.Activation.SplashScreen, global::Windows.UI.Xaml.Controls.UserControl>);
            _typeTable[8] = typeof(global::System.MulticastDelegate);
            _typeTable[9] = typeof(global::System.Delegate);
            _typeTable[10] = typeof(global::System.TimeSpan);
            _typeTable[11] = typeof(global::System.ValueType);
            _typeTable[12] = typeof(global::System.Boolean);
            _typeTable[13] = typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs);
            _typeTable[14] = typeof(global::Template10.Common.BootStrapper.States);
            _typeTable[15] = typeof(global::System.Enum);
            _typeTable[16] = typeof(global::Template10.Controls.ModalDialog);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[19] = typeof(global::TraxxPlayer.ViewModels.LikesViewModel);
            _typeTable[20] = typeof(global::Template10.Mvvm.ViewModelBase);
            _typeTable[21] = typeof(global::Template10.Mvvm.BindableBase);
            _typeTable[22] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::BackgroundAudioShared.SoundCloudTrack>);
            _typeTable[23] = typeof(global::System.Collections.ObjectModel.Collection<global::BackgroundAudioShared.SoundCloudTrack>);
            _typeTable[24] = typeof(global::BackgroundAudioShared.SoundCloudTrack);
            _typeTable[25] = typeof(global::System.Int32);
            _typeTable[26] = typeof(global::BackgroundAudioShared.SoundCloudUser);
            _typeTable[27] = typeof(global::BackgroundAudioShared.SoundCloudCreatedWith);
            _typeTable[28] = typeof(global::Template10.Common.IDispatcherWrapper);
            _typeTable[29] = typeof(global::Template10.Common.IStateItems);
            _typeTable[30] = typeof(global::Template10.Controls.PageHeader);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.Controls.CommandBar);
            _typeTable[32] = typeof(global::Windows.UI.Xaml.Controls.Frame);
            _typeTable[33] = typeof(global::Template10.Behaviors.EllipsisBehavior.Visibilities);
            _typeTable[34] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[35] = typeof(global::Windows.UI.Xaml.Controls.Symbol);
            _typeTable[36] = typeof(global::System.Double);
            _typeTable[37] = typeof(global::TraxxPlayer.Views.Likes);
            _typeTable[38] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[39] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[40] = typeof(global::TraxxPlayer.ViewModels.MeViewModel);
            _typeTable[41] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[42] = typeof(global::TraxxPlayer.Views.Me);
            _typeTable[43] = typeof(global::TraxxPlayer.ViewModels.NowPlayingViewModel);
            _typeTable[44] = typeof(global::TraxxPlayer.Views.NowPlaying);
            _typeTable[45] = typeof(global::Windows.UI.Color);
            _typeTable[46] = typeof(global::System.Byte);
            _typeTable[47] = typeof(global::Template10.Controls.HamburgerMenu);
            _typeTable[48] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Template10.Controls.HamburgerButtonInfo>);
            _typeTable[49] = typeof(global::System.Collections.ObjectModel.Collection<global::Template10.Controls.HamburgerButtonInfo>);
            _typeTable[50] = typeof(global::Template10.Controls.HamburgerButtonInfo);
            _typeTable[51] = typeof(global::Template10.Mvvm.DependencyBindableBase);
            _typeTable[52] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[53] = typeof(global::Template10.Controls.HamburgerButtonInfo.ButtonTypes);
            _typeTable[54] = typeof(global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo);
            _typeTable[55] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[56] = typeof(global::System.Type);
            _typeTable[57] = typeof(global::System.Nullable<global::System.Boolean>);
            _typeTable[58] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[59] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[60] = typeof(global::Windows.UI.Xaml.Controls.SplitViewDisplayMode);
            _typeTable[61] = typeof(global::Windows.UI.Xaml.Controls.Orientation);
            _typeTable[62] = typeof(global::Template10.Controls.HamburgerMenu.OpenCloseModes);
            _typeTable[63] = typeof(global::Template10.Mvvm.DelegateCommand<global::Template10.Controls.HamburgerButtonInfo>);
            _typeTable[64] = typeof(global::Template10.Controls.Resizer);
            _typeTable[65] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[66] = typeof(global::Windows.Foundation.Size);
            _typeTable[67] = typeof(global::TraxxPlayer.Views.Busy);
            _typeTable[68] = typeof(global::TraxxPlayer.ViewModels.DetailPageViewModel);
            _typeTable[69] = typeof(global::TraxxPlayer.Views.DetailPage);
            _typeTable[70] = typeof(global::TraxxPlayer.ViewModels.MainPageViewModel);
            _typeTable[71] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[72] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[73] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[74] = typeof(global::Template10.Behaviors.KeyBehavior);
            _typeTable[75] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[76] = typeof(global::Windows.System.VirtualKey);
            _typeTable[77] = typeof(global::Template10.Behaviors.KeyBehavior.Kinds);
            _typeTable[78] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[79] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[80] = typeof(global::Template10.Behaviors.FocusAction);
            _typeTable[81] = typeof(global::Microsoft.Xaml.Interactions.Core.CallMethodAction);
            _typeTable[82] = typeof(global::TraxxPlayer.Views.MainPage);
            _typeTable[83] = typeof(global::TraxxPlayer.ViewModels.SettingsPageViewModel);
            _typeTable[84] = typeof(global::TraxxPlayer.ViewModels.SettingsPartViewModel);
            _typeTable[85] = typeof(global::TraxxPlayer.ViewModels.AboutPartViewModel);
            _typeTable[86] = typeof(global::TraxxPlayer.Views.SettingsPage);
            _typeTable[87] = typeof(global::TraxxPlayer.Views.Shell);
            _typeTable[88] = typeof(global::TraxxPlayer.Views.Splash);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_2_StateItems() { return new global::Template10.Common.StateItems(); }
        private object Activate_3_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>(); }
        private object Activate_16_ModalDialog() { return new global::Template10.Controls.ModalDialog(); }
        private object Activate_19_LikesViewModel() { return new global::TraxxPlayer.ViewModels.LikesViewModel(); }
        private object Activate_22_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::BackgroundAudioShared.SoundCloudTrack>(); }
        private object Activate_23_Collection() { return new global::System.Collections.ObjectModel.Collection<global::BackgroundAudioShared.SoundCloudTrack>(); }
        private object Activate_24_SoundCloudTrack() { return new global::BackgroundAudioShared.SoundCloudTrack(); }
        private object Activate_26_SoundCloudUser() { return new global::BackgroundAudioShared.SoundCloudUser(); }
        private object Activate_27_SoundCloudCreatedWith() { return new global::BackgroundAudioShared.SoundCloudCreatedWith(); }
        private object Activate_30_PageHeader() { return new global::Template10.Controls.PageHeader(); }
        private object Activate_37_Likes() { return new global::TraxxPlayer.Views.Likes(); }
        private object Activate_40_MeViewModel() { return new global::TraxxPlayer.ViewModels.MeViewModel(); }
        private object Activate_42_Me() { return new global::TraxxPlayer.Views.Me(); }
        private object Activate_43_NowPlayingViewModel() { return new global::TraxxPlayer.ViewModels.NowPlayingViewModel(); }
        private object Activate_44_NowPlaying() { return new global::TraxxPlayer.Views.NowPlaying(); }
        private object Activate_47_HamburgerMenu() { return new global::Template10.Controls.HamburgerMenu(); }
        private object Activate_48_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Template10.Controls.HamburgerButtonInfo>(); }
        private object Activate_49_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Template10.Controls.HamburgerButtonInfo>(); }
        private object Activate_50_HamburgerButtonInfo() { return new global::Template10.Controls.HamburgerButtonInfo(); }
        private object Activate_64_Resizer() { return new global::Template10.Controls.Resizer(); }
        private object Activate_67_Busy() { return new global::TraxxPlayer.Views.Busy(); }
        private object Activate_68_DetailPageViewModel() { return new global::TraxxPlayer.ViewModels.DetailPageViewModel(); }
        private object Activate_69_DetailPage() { return new global::TraxxPlayer.Views.DetailPage(); }
        private object Activate_70_MainPageViewModel() { return new global::TraxxPlayer.ViewModels.MainPageViewModel(); }
        private object Activate_72_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_74_KeyBehavior() { return new global::Template10.Behaviors.KeyBehavior(); }
        private object Activate_75_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_78_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_80_FocusAction() { return new global::Template10.Behaviors.FocusAction(); }
        private object Activate_81_CallMethodAction() { return new global::Microsoft.Xaml.Interactions.Core.CallMethodAction(); }
        private object Activate_82_MainPage() { return new global::TraxxPlayer.Views.MainPage(); }
        private object Activate_83_SettingsPageViewModel() { return new global::TraxxPlayer.ViewModels.SettingsPageViewModel(); }
        private object Activate_84_SettingsPartViewModel() { return new global::TraxxPlayer.ViewModels.SettingsPartViewModel(); }
        private object Activate_85_AboutPartViewModel() { return new global::TraxxPlayer.ViewModels.AboutPartViewModel(); }
        private object Activate_86_SettingsPage() { return new global::TraxxPlayer.Views.SettingsPage(); }
        private object Activate_87_Shell() { return new global::TraxxPlayer.Views.Shell(); }
        private void MapAdd_2_StateItems(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void MapAdd_3_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_22_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::BackgroundAudioShared.SoundCloudTrack>)instance;
            var newItem = (global::BackgroundAudioShared.SoundCloudTrack)item;
            collection.Add(newItem);
        }
        private void VectorAdd_23_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::BackgroundAudioShared.SoundCloudTrack>)instance;
            var newItem = (global::BackgroundAudioShared.SoundCloudTrack)item;
            collection.Add(newItem);
        }
        private void VectorAdd_48_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Template10.Controls.HamburgerButtonInfo>)instance;
            var newItem = (global::Template10.Controls.HamburgerButtonInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_49_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Template10.Controls.HamburgerButtonInfo>)instance;
            var newItem = (global::Template10.Controls.HamburgerButtonInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_72_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_75_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Template10.Common.BootStrapper
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Application"));
                userType.AddMemberName("SessionState");
                userType.AddMemberName("NavigationService");
                userType.AddMemberName("SplashFactory");
                userType.AddMemberName("CacheMaxDuration");
                userType.AddMemberName("ShowShellBackButton");
                userType.AddMemberName("ForceShowShellBackButton");
                userType.AddMemberName("OriginalActivatedArgs");
                userType.AddMemberName("EnableAutoRestoreAfterTerminated");
                userType.AddMemberName("CurrentState");
                userType.AddMemberName("ModalDialog");
                userType.AddMemberName("ModalContent");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Application
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Template10.Common.StateItems
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.Generic.Dictionary`2<String, Object>"));
                userType.DictionaryAdd = MapAdd_2_StateItems;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 3:   //  System.Collections.Generic.Dictionary`2<String, Object>
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_Dictionary;
                userType.DictionaryAdd = MapAdd_3_Dictionary;
                xamlType = userType;
                break;

            case 4:   //  Object
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  String
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Template10.Services.NavigationService.INavigationService
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  System.Func`2<Windows.ApplicationModel.Activation.SplashScreen, Windows.UI.Xaml.Controls.UserControl>
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  System.MulticastDelegate
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case 9:   //  System.Delegate
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 10:   //  TimeSpan
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  System.ValueType
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 12:   //  Boolean
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Windows.ApplicationModel.Activation.IActivatedEventArgs
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  Template10.Common.BootStrapper.States
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Starting", global::Template10.Common.BootStrapper.States.Starting);
                userType.AddEnumValue("Splashing", global::Template10.Common.BootStrapper.States.Splashing);
                userType.AddEnumValue("ShowingContent", global::Template10.Common.BootStrapper.States.ShowingContent);
                xamlType = userType;
                break;

            case 15:   //  System.Enum
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 16:   //  Template10.Controls.ModalDialog
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 17:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  TraxxPlayer.ViewModels.LikesViewModel
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_19_LikesViewModel;
                userType.AddMemberName("Likes");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  Template10.Mvvm.ViewModelBase
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.BindableBase"));
                userType.AddMemberName("NavigationService");
                userType.AddMemberName("Dispatcher");
                userType.AddMemberName("SessionState");
                xamlType = userType;
                break;

            case 21:   //  Template10.Mvvm.BindableBase
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 22:   //  System.Collections.ObjectModel.ObservableCollection`1<BackgroundAudioShared.SoundCloudTrack>
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<BackgroundAudioShared.SoundCloudTrack>"));
                userType.CollectionAdd = VectorAdd_22_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  System.Collections.ObjectModel.Collection`1<BackgroundAudioShared.SoundCloudTrack>
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_Collection;
                userType.CollectionAdd = VectorAdd_23_Collection;
                xamlType = userType;
                break;

            case 24:   //  BackgroundAudioShared.SoundCloudTrack
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_24_SoundCloudTrack;
                userType.AddMemberName("id");
                userType.AddMemberName("created_at");
                userType.AddMemberName("user_id");
                userType.AddMemberName("duration");
                userType.AddMemberName("commentable");
                userType.AddMemberName("state");
                userType.AddMemberName("sharing");
                userType.AddMemberName("tag_list");
                userType.AddMemberName("permalink");
                userType.AddMemberName("description");
                userType.AddMemberName("streamable");
                userType.AddMemberName("downloadable");
                userType.AddMemberName("genre");
                userType.AddMemberName("release");
                userType.AddMemberName("purchase_url");
                userType.AddMemberName("label_id");
                userType.AddMemberName("label_name");
                userType.AddMemberName("isrc");
                userType.AddMemberName("video_url");
                userType.AddMemberName("track_type");
                userType.AddMemberName("key_signature");
                userType.AddMemberName("bpm");
                userType.AddMemberName("title");
                userType.AddMemberName("release_year");
                userType.AddMemberName("release_month");
                userType.AddMemberName("release_day");
                userType.AddMemberName("original_format");
                userType.AddMemberName("original_content_size");
                userType.AddMemberName("license");
                userType.AddMemberName("uri");
                userType.AddMemberName("permalink_url");
                userType.AddMemberName("artwork_url");
                userType.AddMemberName("waveform_url");
                userType.AddMemberName("user");
                userType.AddMemberName("stream_url");
                userType.AddMemberName("download_url");
                userType.AddMemberName("playback_count");
                userType.AddMemberName("download_count");
                userType.AddMemberName("favoritings_count");
                userType.AddMemberName("comment_count");
                userType.AddMemberName("created_with");
                userType.AddMemberName("attachments_uri");
                userType.AddMemberName("AlbumArtUri");
                xamlType = userType;
                break;

            case 25:   //  Int32
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  BackgroundAudioShared.SoundCloudUser
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  BackgroundAudioShared.SoundCloudCreatedWith
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  Template10.Common.IDispatcherWrapper
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Template10.Common.IStateItems
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  Template10.Controls.PageHeader
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.CommandBar"));
                userType.Activator = Activate_30_PageHeader;
                userType.AddMemberName("Frame");
                userType.AddMemberName("Text");
                userType.AddMemberName("EllipsisVisibility");
                userType.AddMemberName("PrimaryCommandsVisibility");
                userType.AddMemberName("BackButtonVisibility");
                userType.AddMemberName("BackButtonContent");
                userType.AddMemberName("EnableHamburgerMenuAutoLayout");
                userType.AddMemberName("VisualStateNarrowMinWidth");
                userType.AddMemberName("VisualStateNormalMinWidth");
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.Controls.CommandBar
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Windows.UI.Xaml.Controls.Frame
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  Template10.Behaviors.EllipsisBehavior.Visibilities
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Visible", global::Template10.Behaviors.EllipsisBehavior.Visibilities.Visible);
                userType.AddEnumValue("Collapsed", global::Template10.Behaviors.EllipsisBehavior.Visibilities.Collapsed);
                userType.AddEnumValue("Auto", global::Template10.Behaviors.EllipsisBehavior.Visibilities.Auto);
                xamlType = userType;
                break;

            case 34:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Windows.UI.Xaml.Controls.Symbol
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  Double
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  TraxxPlayer.Views.Likes
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_Likes;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 39:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  TraxxPlayer.ViewModels.MeViewModel
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_40_MeViewModel;
                userType.AddMemberName("FirstName");
                userType.AddMemberName("LastName");
                userType.AddMemberName("Website");
                userType.AddMemberName("City");
                userType.AddMemberName("Country");
                userType.AddMemberName("Followers");
                userType.AddMemberName("Following");
                userType.AddMemberName("ProfilePhoto");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 42:   //  TraxxPlayer.Views.Me
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_42_Me;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  TraxxPlayer.ViewModels.NowPlayingViewModel
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_43_NowPlayingViewModel;
                userType.AddMemberName("AlbumImage");
                userType.AddMemberName("SongName");
                userType.AddMemberName("AlbumTitle");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  TraxxPlayer.Views.NowPlaying
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_44_NowPlaying;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  Windows.UI.Color
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 46:   //  Byte
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 47:   //  Template10.Controls.HamburgerMenu
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_47_HamburgerMenu;
                userType.SetContentPropertyName("Template10.Controls.HamburgerMenu.PrimaryButtons");
                userType.AddMemberName("PrimaryButtons");
                userType.AddMemberName("PaneBorderThickness");
                userType.AddMemberName("SecondarySeparator");
                userType.AddMemberName("NavButtonBackground");
                userType.AddMemberName("NavButtonForeground");
                userType.AddMemberName("NavAreaBackground");
                userType.AddMemberName("HamburgerForeground");
                userType.AddMemberName("HamburgerBackground");
                userType.AddMemberName("VisualStateNarrowMinWidth");
                userType.AddMemberName("VisualStateNormalMinWidth");
                userType.AddMemberName("VisualStateWideMinWidth");
                userType.AddMemberName("AccentColor");
                userType.AddMemberName("PaneBorderBrush");
                userType.AddMemberName("NavButtonCheckedForeground");
                userType.AddMemberName("NavButtonCheckedBackground");
                userType.AddMemberName("NavButtonCheckedIndicatorBrush");
                userType.AddMemberName("NavButtonPressedForeground");
                userType.AddMemberName("NavButtonPressedBackground");
                userType.AddMemberName("NavButtonHoverForeground");
                userType.AddMemberName("NavButtonHoverBackground");
                userType.AddMemberName("HamburgerButtonVisibility");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("VisualStateNarrowDisplayMode");
                userType.AddMemberName("VisualStateNormalDisplayMode");
                userType.AddMemberName("VisualStateWideDisplayMode");
                userType.AddMemberName("SecondaryButtonOrientation");
                userType.AddMemberName("Selected");
                userType.AddMemberName("NavigationService");
                userType.AddMemberName("IsFullScreen");
                userType.AddMemberName("PaneWidth");
                userType.AddMemberName("HamburgerButtonGridWidth");
                userType.AddMemberName("OpenCloseMode");
                userType.AddMemberName("HeaderContent");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("SecondaryButtons");
                userType.AddMemberName("NavCommand");
                userType.AddMemberName("PropertyChangedHandlers");
                xamlType = userType;
                break;

            case 48:   //  System.Collections.ObjectModel.ObservableCollection`1<Template10.Controls.HamburgerButtonInfo>
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Template10.Controls.HamburgerButtonInfo>"));
                userType.CollectionAdd = VectorAdd_48_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 49:   //  System.Collections.ObjectModel.Collection`1<Template10.Controls.HamburgerButtonInfo>
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_49_Collection;
                userType.CollectionAdd = VectorAdd_49_Collection;
                xamlType = userType;
                break;

            case 50:   //  Template10.Controls.HamburgerButtonInfo
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.DependencyBindableBase"));
                userType.Activator = Activate_50_HamburgerButtonInfo;
                userType.SetContentPropertyName("Template10.Controls.HamburgerButtonInfo.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("ButtonType");
                userType.AddMemberName("NavigationTransitionInfo");
                userType.AddMemberName("Command");
                userType.AddMemberName("ToolTip");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("PageType");
                userType.AddMemberName("PageParameter");
                userType.AddMemberName("ClearHistory");
                userType.AddMemberName("ClearCache");
                userType.AddMemberName("Visibility");
                userType.AddMemberName("IsEnabled");
                userType.AddMemberName("IsChecked");
                userType.AddMemberName("MaxWidth");
                xamlType = userType;
                break;

            case 51:   //  Template10.Mvvm.DependencyBindableBase
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 52:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 53:   //  Template10.Controls.HamburgerButtonInfo.ButtonTypes
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Toggle", global::Template10.Controls.HamburgerButtonInfo.ButtonTypes.Toggle);
                userType.AddEnumValue("Command", global::Template10.Controls.HamburgerButtonInfo.ButtonTypes.Command);
                userType.AddEnumValue("Literal", global::Template10.Controls.HamburgerButtonInfo.ButtonTypes.Literal);
                xamlType = userType;
                break;

            case 54:   //  Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 55:   //  System.Windows.Input.ICommand
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 56:   //  System.Type
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  System.Nullable`1<Boolean>
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 58:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 59:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 60:   //  Windows.UI.Xaml.Controls.SplitViewDisplayMode
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 61:   //  Windows.UI.Xaml.Controls.Orientation
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 62:   //  Template10.Controls.HamburgerMenu.OpenCloseModes
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Template10.Controls.HamburgerMenu.OpenCloseModes.None);
                userType.AddEnumValue("Auto", global::Template10.Controls.HamburgerMenu.OpenCloseModes.Auto);
                userType.AddEnumValue("Tap", global::Template10.Controls.HamburgerMenu.OpenCloseModes.Tap);
                userType.AddEnumValue("Swipe", global::Template10.Controls.HamburgerMenu.OpenCloseModes.Swipe);
                xamlType = userType;
                break;

            case 63:   //  Template10.Mvvm.DelegateCommand`1<Template10.Controls.HamburgerButtonInfo>
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 64:   //  Template10.Controls.Resizer
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_64_Resizer;
                userType.SetContentPropertyName("Template10.Controls.Resizer.ElementControl");
                userType.AddMemberName("ElementControl");
                userType.AddMemberName("GrabberBrush");
                userType.AddMemberName("GrabberVisibility");
                userType.AddMemberName("GrabberSize");
                xamlType = userType;
                break;

            case 65:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 66:   //  Windows.Foundation.Size
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 67:   //  TraxxPlayer.Views.Busy
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_67_Busy;
                userType.AddMemberName("BusyText");
                userType.AddMemberName("IsBusy");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 68:   //  TraxxPlayer.ViewModels.DetailPageViewModel
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_68_DetailPageViewModel;
                userType.AddMemberName("Value");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 69:   //  TraxxPlayer.Views.DetailPage
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_69_DetailPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 70:   //  TraxxPlayer.ViewModels.MainPageViewModel
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_70_MainPageViewModel;
                userType.AddMemberName("Value");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 71:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 72:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_72_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 73:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 74:   //  Template10.Behaviors.KeyBehavior
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_74_KeyBehavior;
                userType.SetContentPropertyName("Template10.Behaviors.KeyBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("Key");
                userType.AddMemberName("AssociatedObject");
                userType.AddMemberName("AndControl");
                userType.AddMemberName("AndAlt");
                userType.AddMemberName("AndShift");
                userType.AddMemberName("Event");
                xamlType = userType;
                break;

            case 75:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_75_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 76:   //  Windows.System.VirtualKey
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Windows.System.VirtualKey.None);
                userType.AddEnumValue("LeftButton", global::Windows.System.VirtualKey.LeftButton);
                userType.AddEnumValue("RightButton", global::Windows.System.VirtualKey.RightButton);
                userType.AddEnumValue("Cancel", global::Windows.System.VirtualKey.Cancel);
                userType.AddEnumValue("MiddleButton", global::Windows.System.VirtualKey.MiddleButton);
                userType.AddEnumValue("XButton1", global::Windows.System.VirtualKey.XButton1);
                userType.AddEnumValue("XButton2", global::Windows.System.VirtualKey.XButton2);
                userType.AddEnumValue("Back", global::Windows.System.VirtualKey.Back);
                userType.AddEnumValue("Tab", global::Windows.System.VirtualKey.Tab);
                userType.AddEnumValue("Clear", global::Windows.System.VirtualKey.Clear);
                userType.AddEnumValue("Enter", global::Windows.System.VirtualKey.Enter);
                userType.AddEnumValue("Shift", global::Windows.System.VirtualKey.Shift);
                userType.AddEnumValue("Control", global::Windows.System.VirtualKey.Control);
                userType.AddEnumValue("Menu", global::Windows.System.VirtualKey.Menu);
                userType.AddEnumValue("Pause", global::Windows.System.VirtualKey.Pause);
                userType.AddEnumValue("CapitalLock", global::Windows.System.VirtualKey.CapitalLock);
                userType.AddEnumValue("Kana", global::Windows.System.VirtualKey.Kana);
                userType.AddEnumValue("Hangul", global::Windows.System.VirtualKey.Hangul);
                userType.AddEnumValue("Junja", global::Windows.System.VirtualKey.Junja);
                userType.AddEnumValue("Final", global::Windows.System.VirtualKey.Final);
                userType.AddEnumValue("Hanja", global::Windows.System.VirtualKey.Hanja);
                userType.AddEnumValue("Kanji", global::Windows.System.VirtualKey.Kanji);
                userType.AddEnumValue("Escape", global::Windows.System.VirtualKey.Escape);
                userType.AddEnumValue("Convert", global::Windows.System.VirtualKey.Convert);
                userType.AddEnumValue("NonConvert", global::Windows.System.VirtualKey.NonConvert);
                userType.AddEnumValue("Accept", global::Windows.System.VirtualKey.Accept);
                userType.AddEnumValue("ModeChange", global::Windows.System.VirtualKey.ModeChange);
                userType.AddEnumValue("Space", global::Windows.System.VirtualKey.Space);
                userType.AddEnumValue("PageUp", global::Windows.System.VirtualKey.PageUp);
                userType.AddEnumValue("PageDown", global::Windows.System.VirtualKey.PageDown);
                userType.AddEnumValue("End", global::Windows.System.VirtualKey.End);
                userType.AddEnumValue("Home", global::Windows.System.VirtualKey.Home);
                userType.AddEnumValue("Left", global::Windows.System.VirtualKey.Left);
                userType.AddEnumValue("Up", global::Windows.System.VirtualKey.Up);
                userType.AddEnumValue("Right", global::Windows.System.VirtualKey.Right);
                userType.AddEnumValue("Down", global::Windows.System.VirtualKey.Down);
                userType.AddEnumValue("Select", global::Windows.System.VirtualKey.Select);
                userType.AddEnumValue("Print", global::Windows.System.VirtualKey.Print);
                userType.AddEnumValue("Execute", global::Windows.System.VirtualKey.Execute);
                userType.AddEnumValue("Snapshot", global::Windows.System.VirtualKey.Snapshot);
                userType.AddEnumValue("Insert", global::Windows.System.VirtualKey.Insert);
                userType.AddEnumValue("Delete", global::Windows.System.VirtualKey.Delete);
                userType.AddEnumValue("Help", global::Windows.System.VirtualKey.Help);
                userType.AddEnumValue("Number0", global::Windows.System.VirtualKey.Number0);
                userType.AddEnumValue("Number1", global::Windows.System.VirtualKey.Number1);
                userType.AddEnumValue("Number2", global::Windows.System.VirtualKey.Number2);
                userType.AddEnumValue("Number3", global::Windows.System.VirtualKey.Number3);
                userType.AddEnumValue("Number4", global::Windows.System.VirtualKey.Number4);
                userType.AddEnumValue("Number5", global::Windows.System.VirtualKey.Number5);
                userType.AddEnumValue("Number6", global::Windows.System.VirtualKey.Number6);
                userType.AddEnumValue("Number7", global::Windows.System.VirtualKey.Number7);
                userType.AddEnumValue("Number8", global::Windows.System.VirtualKey.Number8);
                userType.AddEnumValue("Number9", global::Windows.System.VirtualKey.Number9);
                userType.AddEnumValue("A", global::Windows.System.VirtualKey.A);
                userType.AddEnumValue("B", global::Windows.System.VirtualKey.B);
                userType.AddEnumValue("C", global::Windows.System.VirtualKey.C);
                userType.AddEnumValue("D", global::Windows.System.VirtualKey.D);
                userType.AddEnumValue("E", global::Windows.System.VirtualKey.E);
                userType.AddEnumValue("F", global::Windows.System.VirtualKey.F);
                userType.AddEnumValue("G", global::Windows.System.VirtualKey.G);
                userType.AddEnumValue("H", global::Windows.System.VirtualKey.H);
                userType.AddEnumValue("I", global::Windows.System.VirtualKey.I);
                userType.AddEnumValue("J", global::Windows.System.VirtualKey.J);
                userType.AddEnumValue("K", global::Windows.System.VirtualKey.K);
                userType.AddEnumValue("L", global::Windows.System.VirtualKey.L);
                userType.AddEnumValue("M", global::Windows.System.VirtualKey.M);
                userType.AddEnumValue("N", global::Windows.System.VirtualKey.N);
                userType.AddEnumValue("O", global::Windows.System.VirtualKey.O);
                userType.AddEnumValue("P", global::Windows.System.VirtualKey.P);
                userType.AddEnumValue("Q", global::Windows.System.VirtualKey.Q);
                userType.AddEnumValue("R", global::Windows.System.VirtualKey.R);
                userType.AddEnumValue("S", global::Windows.System.VirtualKey.S);
                userType.AddEnumValue("T", global::Windows.System.VirtualKey.T);
                userType.AddEnumValue("U", global::Windows.System.VirtualKey.U);
                userType.AddEnumValue("V", global::Windows.System.VirtualKey.V);
                userType.AddEnumValue("W", global::Windows.System.VirtualKey.W);
                userType.AddEnumValue("X", global::Windows.System.VirtualKey.X);
                userType.AddEnumValue("Y", global::Windows.System.VirtualKey.Y);
                userType.AddEnumValue("Z", global::Windows.System.VirtualKey.Z);
                userType.AddEnumValue("LeftWindows", global::Windows.System.VirtualKey.LeftWindows);
                userType.AddEnumValue("RightWindows", global::Windows.System.VirtualKey.RightWindows);
                userType.AddEnumValue("Application", global::Windows.System.VirtualKey.Application);
                userType.AddEnumValue("Sleep", global::Windows.System.VirtualKey.Sleep);
                userType.AddEnumValue("NumberPad0", global::Windows.System.VirtualKey.NumberPad0);
                userType.AddEnumValue("NumberPad1", global::Windows.System.VirtualKey.NumberPad1);
                userType.AddEnumValue("NumberPad2", global::Windows.System.VirtualKey.NumberPad2);
                userType.AddEnumValue("NumberPad3", global::Windows.System.VirtualKey.NumberPad3);
                userType.AddEnumValue("NumberPad4", global::Windows.System.VirtualKey.NumberPad4);
                userType.AddEnumValue("NumberPad5", global::Windows.System.VirtualKey.NumberPad5);
                userType.AddEnumValue("NumberPad6", global::Windows.System.VirtualKey.NumberPad6);
                userType.AddEnumValue("NumberPad7", global::Windows.System.VirtualKey.NumberPad7);
                userType.AddEnumValue("NumberPad8", global::Windows.System.VirtualKey.NumberPad8);
                userType.AddEnumValue("NumberPad9", global::Windows.System.VirtualKey.NumberPad9);
                userType.AddEnumValue("Multiply", global::Windows.System.VirtualKey.Multiply);
                userType.AddEnumValue("Add", global::Windows.System.VirtualKey.Add);
                userType.AddEnumValue("Separator", global::Windows.System.VirtualKey.Separator);
                userType.AddEnumValue("Subtract", global::Windows.System.VirtualKey.Subtract);
                userType.AddEnumValue("Decimal", global::Windows.System.VirtualKey.Decimal);
                userType.AddEnumValue("Divide", global::Windows.System.VirtualKey.Divide);
                userType.AddEnumValue("F1", global::Windows.System.VirtualKey.F1);
                userType.AddEnumValue("F2", global::Windows.System.VirtualKey.F2);
                userType.AddEnumValue("F3", global::Windows.System.VirtualKey.F3);
                userType.AddEnumValue("F4", global::Windows.System.VirtualKey.F4);
                userType.AddEnumValue("F5", global::Windows.System.VirtualKey.F5);
                userType.AddEnumValue("F6", global::Windows.System.VirtualKey.F6);
                userType.AddEnumValue("F7", global::Windows.System.VirtualKey.F7);
                userType.AddEnumValue("F8", global::Windows.System.VirtualKey.F8);
                userType.AddEnumValue("F9", global::Windows.System.VirtualKey.F9);
                userType.AddEnumValue("F10", global::Windows.System.VirtualKey.F10);
                userType.AddEnumValue("F11", global::Windows.System.VirtualKey.F11);
                userType.AddEnumValue("F12", global::Windows.System.VirtualKey.F12);
                userType.AddEnumValue("F13", global::Windows.System.VirtualKey.F13);
                userType.AddEnumValue("F14", global::Windows.System.VirtualKey.F14);
                userType.AddEnumValue("F15", global::Windows.System.VirtualKey.F15);
                userType.AddEnumValue("F16", global::Windows.System.VirtualKey.F16);
                userType.AddEnumValue("F17", global::Windows.System.VirtualKey.F17);
                userType.AddEnumValue("F18", global::Windows.System.VirtualKey.F18);
                userType.AddEnumValue("F19", global::Windows.System.VirtualKey.F19);
                userType.AddEnumValue("F20", global::Windows.System.VirtualKey.F20);
                userType.AddEnumValue("F21", global::Windows.System.VirtualKey.F21);
                userType.AddEnumValue("F22", global::Windows.System.VirtualKey.F22);
                userType.AddEnumValue("F23", global::Windows.System.VirtualKey.F23);
                userType.AddEnumValue("F24", global::Windows.System.VirtualKey.F24);
                userType.AddEnumValue("NavigationView", global::Windows.System.VirtualKey.NavigationView);
                userType.AddEnumValue("NavigationMenu", global::Windows.System.VirtualKey.NavigationMenu);
                userType.AddEnumValue("NavigationUp", global::Windows.System.VirtualKey.NavigationUp);
                userType.AddEnumValue("NavigationDown", global::Windows.System.VirtualKey.NavigationDown);
                userType.AddEnumValue("NavigationLeft", global::Windows.System.VirtualKey.NavigationLeft);
                userType.AddEnumValue("NavigationRight", global::Windows.System.VirtualKey.NavigationRight);
                userType.AddEnumValue("NavigationAccept", global::Windows.System.VirtualKey.NavigationAccept);
                userType.AddEnumValue("NavigationCancel", global::Windows.System.VirtualKey.NavigationCancel);
                userType.AddEnumValue("NumberKeyLock", global::Windows.System.VirtualKey.NumberKeyLock);
                userType.AddEnumValue("Scroll", global::Windows.System.VirtualKey.Scroll);
                userType.AddEnumValue("LeftShift", global::Windows.System.VirtualKey.LeftShift);
                userType.AddEnumValue("RightShift", global::Windows.System.VirtualKey.RightShift);
                userType.AddEnumValue("LeftControl", global::Windows.System.VirtualKey.LeftControl);
                userType.AddEnumValue("RightControl", global::Windows.System.VirtualKey.RightControl);
                userType.AddEnumValue("LeftMenu", global::Windows.System.VirtualKey.LeftMenu);
                userType.AddEnumValue("RightMenu", global::Windows.System.VirtualKey.RightMenu);
                userType.AddEnumValue("GoBack", global::Windows.System.VirtualKey.GoBack);
                userType.AddEnumValue("GoForward", global::Windows.System.VirtualKey.GoForward);
                userType.AddEnumValue("Refresh", global::Windows.System.VirtualKey.Refresh);
                userType.AddEnumValue("Stop", global::Windows.System.VirtualKey.Stop);
                userType.AddEnumValue("Search", global::Windows.System.VirtualKey.Search);
                userType.AddEnumValue("Favorites", global::Windows.System.VirtualKey.Favorites);
                userType.AddEnumValue("GoHome", global::Windows.System.VirtualKey.GoHome);
                userType.AddEnumValue("GamepadA", global::Windows.System.VirtualKey.GamepadA);
                userType.AddEnumValue("GamepadB", global::Windows.System.VirtualKey.GamepadB);
                userType.AddEnumValue("GamepadX", global::Windows.System.VirtualKey.GamepadX);
                userType.AddEnumValue("GamepadY", global::Windows.System.VirtualKey.GamepadY);
                userType.AddEnumValue("GamepadRightShoulder", global::Windows.System.VirtualKey.GamepadRightShoulder);
                userType.AddEnumValue("GamepadLeftShoulder", global::Windows.System.VirtualKey.GamepadLeftShoulder);
                userType.AddEnumValue("GamepadLeftTrigger", global::Windows.System.VirtualKey.GamepadLeftTrigger);
                userType.AddEnumValue("GamepadRightTrigger", global::Windows.System.VirtualKey.GamepadRightTrigger);
                userType.AddEnumValue("GamepadDPadUp", global::Windows.System.VirtualKey.GamepadDPadUp);
                userType.AddEnumValue("GamepadDPadDown", global::Windows.System.VirtualKey.GamepadDPadDown);
                userType.AddEnumValue("GamepadDPadLeft", global::Windows.System.VirtualKey.GamepadDPadLeft);
                userType.AddEnumValue("GamepadDPadRight", global::Windows.System.VirtualKey.GamepadDPadRight);
                userType.AddEnumValue("GamepadMenu", global::Windows.System.VirtualKey.GamepadMenu);
                userType.AddEnumValue("GamepadView", global::Windows.System.VirtualKey.GamepadView);
                userType.AddEnumValue("GamepadLeftThumbstickButton", global::Windows.System.VirtualKey.GamepadLeftThumbstickButton);
                userType.AddEnumValue("GamepadRightThumbstickButton", global::Windows.System.VirtualKey.GamepadRightThumbstickButton);
                userType.AddEnumValue("GamepadLeftThumbstickUp", global::Windows.System.VirtualKey.GamepadLeftThumbstickUp);
                userType.AddEnumValue("GamepadLeftThumbstickDown", global::Windows.System.VirtualKey.GamepadLeftThumbstickDown);
                userType.AddEnumValue("GamepadLeftThumbstickRight", global::Windows.System.VirtualKey.GamepadLeftThumbstickRight);
                userType.AddEnumValue("GamepadLeftThumbstickLeft", global::Windows.System.VirtualKey.GamepadLeftThumbstickLeft);
                userType.AddEnumValue("GamepadRightThumbstickUp", global::Windows.System.VirtualKey.GamepadRightThumbstickUp);
                userType.AddEnumValue("GamepadRightThumbstickDown", global::Windows.System.VirtualKey.GamepadRightThumbstickDown);
                userType.AddEnumValue("GamepadRightThumbstickRight", global::Windows.System.VirtualKey.GamepadRightThumbstickRight);
                userType.AddEnumValue("GamepadRightThumbstickLeft", global::Windows.System.VirtualKey.GamepadRightThumbstickLeft);
                xamlType = userType;
                break;

            case 77:   //  Template10.Behaviors.KeyBehavior.Kinds
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("KeyUp", global::Template10.Behaviors.KeyBehavior.Kinds.KeyUp);
                userType.AddEnumValue("KeyDown", global::Template10.Behaviors.KeyBehavior.Kinds.KeyDown);
                xamlType = userType;
                break;

            case 78:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.Activator = Activate_78_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                xamlType = userType;
                break;

            case 79:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 80:   //  Template10.Behaviors.FocusAction
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_80_FocusAction;
                userType.AddMemberName("TargetObject");
                xamlType = userType;
                break;

            case 81:   //  Microsoft.Xaml.Interactions.Core.CallMethodAction
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_81_CallMethodAction;
                userType.AddMemberName("MethodName");
                userType.AddMemberName("TargetObject");
                xamlType = userType;
                break;

            case 82:   //  TraxxPlayer.Views.MainPage
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_82_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 83:   //  TraxxPlayer.ViewModels.SettingsPageViewModel
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_83_SettingsPageViewModel;
                userType.AddMemberName("SettingsPartViewModel");
                userType.AddMemberName("AboutPartViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 84:   //  TraxxPlayer.ViewModels.SettingsPartViewModel
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 85:   //  TraxxPlayer.ViewModels.AboutPartViewModel
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 86:   //  TraxxPlayer.Views.SettingsPage
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_86_SettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 87:   //  TraxxPlayer.Views.Shell
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_87_Shell;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 88:   //  TraxxPlayer.Views.Splash
                userType = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Template10.Template10__Library__XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_BootStrapper_SessionState(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.SessionState;
        }
        private void set_0_BootStrapper_SessionState(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.SessionState = (global::Template10.Common.StateItems)Value;
        }
        private object get_1_BootStrapper_NavigationService(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.NavigationService;
        }
        private object get_2_BootStrapper_SplashFactory(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.SplashFactory;
        }
        private object get_3_BootStrapper_CacheMaxDuration(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.CacheMaxDuration;
        }
        private void set_3_BootStrapper_CacheMaxDuration(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.CacheMaxDuration = (global::System.TimeSpan)Value;
        }
        private object get_4_BootStrapper_ShowShellBackButton(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ShowShellBackButton;
        }
        private void set_4_BootStrapper_ShowShellBackButton(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.ShowShellBackButton = (global::System.Boolean)Value;
        }
        private object get_5_BootStrapper_ForceShowShellBackButton(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ForceShowShellBackButton;
        }
        private void set_5_BootStrapper_ForceShowShellBackButton(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.ForceShowShellBackButton = (global::System.Boolean)Value;
        }
        private object get_6_BootStrapper_OriginalActivatedArgs(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.OriginalActivatedArgs;
        }
        private object get_7_BootStrapper_EnableAutoRestoreAfterTerminated(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.EnableAutoRestoreAfterTerminated;
        }
        private void set_7_BootStrapper_EnableAutoRestoreAfterTerminated(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.EnableAutoRestoreAfterTerminated = (global::System.Boolean)Value;
        }
        private object get_8_BootStrapper_CurrentState(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.CurrentState;
        }
        private void set_8_BootStrapper_CurrentState(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.CurrentState = (global::Template10.Common.BootStrapper.States)Value;
        }
        private object get_9_BootStrapper_ModalDialog(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ModalDialog;
        }
        private object get_10_BootStrapper_ModalContent(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ModalContent;
        }
        private void set_10_BootStrapper_ModalContent(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.ModalContent = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_11_LikesViewModel_Likes(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.LikesViewModel)instance;
            return that.Likes;
        }
        private void set_11_LikesViewModel_Likes(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.LikesViewModel)instance;
            that.Likes = (global::System.Collections.ObjectModel.ObservableCollection<global::BackgroundAudioShared.SoundCloudTrack>)Value;
        }
        private object get_12_SoundCloudTrack_id(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.id;
        }
        private void set_12_SoundCloudTrack_id(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_13_SoundCloudTrack_created_at(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.created_at;
        }
        private void set_13_SoundCloudTrack_created_at(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.created_at = (global::System.String)Value;
        }
        private object get_14_SoundCloudTrack_user_id(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.user_id;
        }
        private void set_14_SoundCloudTrack_user_id(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.user_id = (global::System.Int32)Value;
        }
        private object get_15_SoundCloudTrack_duration(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.duration;
        }
        private void set_15_SoundCloudTrack_duration(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.duration = (global::System.Int32)Value;
        }
        private object get_16_SoundCloudTrack_commentable(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.commentable;
        }
        private void set_16_SoundCloudTrack_commentable(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.commentable = (global::System.Boolean)Value;
        }
        private object get_17_SoundCloudTrack_state(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.state;
        }
        private void set_17_SoundCloudTrack_state(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.state = (global::System.String)Value;
        }
        private object get_18_SoundCloudTrack_sharing(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.sharing;
        }
        private void set_18_SoundCloudTrack_sharing(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.sharing = (global::System.String)Value;
        }
        private object get_19_SoundCloudTrack_tag_list(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.tag_list;
        }
        private void set_19_SoundCloudTrack_tag_list(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.tag_list = (global::System.String)Value;
        }
        private object get_20_SoundCloudTrack_permalink(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.permalink;
        }
        private void set_20_SoundCloudTrack_permalink(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.permalink = (global::System.String)Value;
        }
        private object get_21_SoundCloudTrack_description(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.description;
        }
        private void set_21_SoundCloudTrack_description(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.description = (global::System.Object)Value;
        }
        private object get_22_SoundCloudTrack_streamable(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.streamable;
        }
        private void set_22_SoundCloudTrack_streamable(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.streamable = (global::System.Boolean)Value;
        }
        private object get_23_SoundCloudTrack_downloadable(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.downloadable;
        }
        private void set_23_SoundCloudTrack_downloadable(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.downloadable = (global::System.Boolean)Value;
        }
        private object get_24_SoundCloudTrack_genre(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.genre;
        }
        private void set_24_SoundCloudTrack_genre(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.genre = (global::System.Object)Value;
        }
        private object get_25_SoundCloudTrack_release(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.release;
        }
        private void set_25_SoundCloudTrack_release(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.release = (global::System.Object)Value;
        }
        private object get_26_SoundCloudTrack_purchase_url(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.purchase_url;
        }
        private void set_26_SoundCloudTrack_purchase_url(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.purchase_url = (global::System.Object)Value;
        }
        private object get_27_SoundCloudTrack_label_id(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.label_id;
        }
        private void set_27_SoundCloudTrack_label_id(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.label_id = (global::System.Object)Value;
        }
        private object get_28_SoundCloudTrack_label_name(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.label_name;
        }
        private void set_28_SoundCloudTrack_label_name(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.label_name = (global::System.Object)Value;
        }
        private object get_29_SoundCloudTrack_isrc(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.isrc;
        }
        private void set_29_SoundCloudTrack_isrc(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.isrc = (global::System.Object)Value;
        }
        private object get_30_SoundCloudTrack_video_url(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.video_url;
        }
        private void set_30_SoundCloudTrack_video_url(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.video_url = (global::System.Object)Value;
        }
        private object get_31_SoundCloudTrack_track_type(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.track_type;
        }
        private void set_31_SoundCloudTrack_track_type(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.track_type = (global::System.String)Value;
        }
        private object get_32_SoundCloudTrack_key_signature(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.key_signature;
        }
        private void set_32_SoundCloudTrack_key_signature(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.key_signature = (global::System.Object)Value;
        }
        private object get_33_SoundCloudTrack_bpm(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.bpm;
        }
        private void set_33_SoundCloudTrack_bpm(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.bpm = (global::System.Object)Value;
        }
        private object get_34_SoundCloudTrack_title(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.title;
        }
        private void set_34_SoundCloudTrack_title(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.title = (global::System.String)Value;
        }
        private object get_35_SoundCloudTrack_release_year(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.release_year;
        }
        private void set_35_SoundCloudTrack_release_year(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.release_year = (global::System.Object)Value;
        }
        private object get_36_SoundCloudTrack_release_month(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.release_month;
        }
        private void set_36_SoundCloudTrack_release_month(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.release_month = (global::System.Object)Value;
        }
        private object get_37_SoundCloudTrack_release_day(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.release_day;
        }
        private void set_37_SoundCloudTrack_release_day(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.release_day = (global::System.Object)Value;
        }
        private object get_38_SoundCloudTrack_original_format(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.original_format;
        }
        private void set_38_SoundCloudTrack_original_format(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.original_format = (global::System.String)Value;
        }
        private object get_39_SoundCloudTrack_original_content_size(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.original_content_size;
        }
        private void set_39_SoundCloudTrack_original_content_size(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.original_content_size = (global::System.Int32)Value;
        }
        private object get_40_SoundCloudTrack_license(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.license;
        }
        private void set_40_SoundCloudTrack_license(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.license = (global::System.String)Value;
        }
        private object get_41_SoundCloudTrack_uri(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.uri;
        }
        private void set_41_SoundCloudTrack_uri(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.uri = (global::System.String)Value;
        }
        private object get_42_SoundCloudTrack_permalink_url(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.permalink_url;
        }
        private void set_42_SoundCloudTrack_permalink_url(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.permalink_url = (global::System.String)Value;
        }
        private object get_43_SoundCloudTrack_artwork_url(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.artwork_url;
        }
        private void set_43_SoundCloudTrack_artwork_url(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.artwork_url = (global::System.Object)Value;
        }
        private object get_44_SoundCloudTrack_waveform_url(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.waveform_url;
        }
        private void set_44_SoundCloudTrack_waveform_url(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.waveform_url = (global::System.String)Value;
        }
        private object get_45_SoundCloudTrack_user(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.user;
        }
        private void set_45_SoundCloudTrack_user(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.user = (global::BackgroundAudioShared.SoundCloudUser)Value;
        }
        private object get_46_SoundCloudTrack_stream_url(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.stream_url;
        }
        private void set_46_SoundCloudTrack_stream_url(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.stream_url = (global::System.String)Value;
        }
        private object get_47_SoundCloudTrack_download_url(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.download_url;
        }
        private void set_47_SoundCloudTrack_download_url(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.download_url = (global::System.String)Value;
        }
        private object get_48_SoundCloudTrack_playback_count(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.playback_count;
        }
        private void set_48_SoundCloudTrack_playback_count(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.playback_count = (global::System.Int32)Value;
        }
        private object get_49_SoundCloudTrack_download_count(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.download_count;
        }
        private void set_49_SoundCloudTrack_download_count(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.download_count = (global::System.Int32)Value;
        }
        private object get_50_SoundCloudTrack_favoritings_count(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.favoritings_count;
        }
        private void set_50_SoundCloudTrack_favoritings_count(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.favoritings_count = (global::System.Int32)Value;
        }
        private object get_51_SoundCloudTrack_comment_count(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.comment_count;
        }
        private void set_51_SoundCloudTrack_comment_count(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.comment_count = (global::System.Int32)Value;
        }
        private object get_52_SoundCloudTrack_created_with(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.created_with;
        }
        private void set_52_SoundCloudTrack_created_with(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.created_with = (global::BackgroundAudioShared.SoundCloudCreatedWith)Value;
        }
        private object get_53_SoundCloudTrack_attachments_uri(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.attachments_uri;
        }
        private void set_53_SoundCloudTrack_attachments_uri(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.attachments_uri = (global::System.String)Value;
        }
        private object get_54_SoundCloudTrack_AlbumArtUri(object instance)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            return that.AlbumArtUri;
        }
        private void set_54_SoundCloudTrack_AlbumArtUri(object instance, object Value)
        {
            var that = (global::BackgroundAudioShared.SoundCloudTrack)instance;
            that.AlbumArtUri = (global::System.String)Value;
        }
        private object get_55_ViewModelBase_NavigationService(object instance)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            return that.NavigationService;
        }
        private void set_55_ViewModelBase_NavigationService(object instance, object Value)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            that.NavigationService = (global::Template10.Services.NavigationService.INavigationService)Value;
        }
        private object get_56_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            return that.Dispatcher;
        }
        private void set_56_ViewModelBase_Dispatcher(object instance, object Value)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            that.Dispatcher = (global::Template10.Common.IDispatcherWrapper)Value;
        }
        private object get_57_ViewModelBase_SessionState(object instance)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            return that.SessionState;
        }
        private void set_57_ViewModelBase_SessionState(object instance, object Value)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            that.SessionState = (global::Template10.Common.IStateItems)Value;
        }
        private object get_58_PageHeader_Frame(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.Frame;
        }
        private void set_58_PageHeader_Frame(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.Frame = (global::Windows.UI.Xaml.Controls.Frame)Value;
        }
        private object get_59_PageHeader_Text(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.Text;
        }
        private void set_59_PageHeader_Text(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_60_PageHeader_EllipsisVisibility(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.EllipsisVisibility;
        }
        private void set_60_PageHeader_EllipsisVisibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.EllipsisVisibility = (global::Template10.Behaviors.EllipsisBehavior.Visibilities)Value;
        }
        private object get_61_PageHeader_PrimaryCommandsVisibility(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.PrimaryCommandsVisibility;
        }
        private void set_61_PageHeader_PrimaryCommandsVisibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.PrimaryCommandsVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_62_PageHeader_BackButtonVisibility(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.BackButtonVisibility;
        }
        private void set_62_PageHeader_BackButtonVisibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.BackButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_63_PageHeader_BackButtonContent(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.BackButtonContent;
        }
        private void set_63_PageHeader_BackButtonContent(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.BackButtonContent = (global::Windows.UI.Xaml.Controls.Symbol)Value;
        }
        private object get_64_PageHeader_EnableHamburgerMenuAutoLayout(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.EnableHamburgerMenuAutoLayout;
        }
        private void set_64_PageHeader_EnableHamburgerMenuAutoLayout(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.EnableHamburgerMenuAutoLayout = (global::System.Boolean)Value;
        }
        private object get_65_PageHeader_VisualStateNarrowMinWidth(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.VisualStateNarrowMinWidth;
        }
        private void set_65_PageHeader_VisualStateNarrowMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.VisualStateNarrowMinWidth = (global::System.Double)Value;
        }
        private object get_66_PageHeader_VisualStateNormalMinWidth(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.VisualStateNormalMinWidth;
        }
        private void set_66_PageHeader_VisualStateNormalMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.VisualStateNormalMinWidth = (global::System.Double)Value;
        }
        private object get_67_MeViewModel_FirstName(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            return that.FirstName;
        }
        private void set_67_MeViewModel_FirstName(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            that.FirstName = (global::System.String)Value;
        }
        private object get_68_MeViewModel_LastName(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            return that.LastName;
        }
        private void set_68_MeViewModel_LastName(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            that.LastName = (global::System.String)Value;
        }
        private object get_69_MeViewModel_Website(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            return that.Website;
        }
        private void set_69_MeViewModel_Website(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            that.Website = (global::System.String)Value;
        }
        private object get_70_MeViewModel_City(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            return that.City;
        }
        private void set_70_MeViewModel_City(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            that.City = (global::System.String)Value;
        }
        private object get_71_MeViewModel_Country(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            return that.Country;
        }
        private void set_71_MeViewModel_Country(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            that.Country = (global::System.String)Value;
        }
        private object get_72_MeViewModel_Followers(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            return that.Followers;
        }
        private void set_72_MeViewModel_Followers(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            that.Followers = (global::System.String)Value;
        }
        private object get_73_MeViewModel_Following(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            return that.Following;
        }
        private void set_73_MeViewModel_Following(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            that.Following = (global::System.String)Value;
        }
        private object get_74_MeViewModel_ProfilePhoto(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            return that.ProfilePhoto;
        }
        private void set_74_MeViewModel_ProfilePhoto(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.MeViewModel)instance;
            that.ProfilePhoto = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_75_NowPlayingViewModel_AlbumImage(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.NowPlayingViewModel)instance;
            return that.AlbumImage;
        }
        private void set_75_NowPlayingViewModel_AlbumImage(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.NowPlayingViewModel)instance;
            that.AlbumImage = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_76_NowPlayingViewModel_SongName(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.NowPlayingViewModel)instance;
            return that.SongName;
        }
        private void set_76_NowPlayingViewModel_SongName(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.NowPlayingViewModel)instance;
            that.SongName = (global::System.String)Value;
        }
        private object get_77_NowPlayingViewModel_AlbumTitle(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.NowPlayingViewModel)instance;
            return that.AlbumTitle;
        }
        private void set_77_NowPlayingViewModel_AlbumTitle(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.NowPlayingViewModel)instance;
            that.AlbumTitle = (global::System.String)Value;
        }
        private object get_78_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_78_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_79_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_79_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_80_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_80_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_81_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_81_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_82_HamburgerMenu_PrimaryButtons(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.PrimaryButtons;
        }
        private void set_82_HamburgerMenu_PrimaryButtons(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.PrimaryButtons = (global::System.Collections.ObjectModel.ObservableCollection<global::Template10.Controls.HamburgerButtonInfo>)Value;
        }
        private object get_83_HamburgerButtonInfo_Content(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.Content;
        }
        private void set_83_HamburgerButtonInfo_Content(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.Content = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_84_HamburgerButtonInfo_ButtonType(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.ButtonType;
        }
        private void set_84_HamburgerButtonInfo_ButtonType(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.ButtonType = (global::Template10.Controls.HamburgerButtonInfo.ButtonTypes)Value;
        }
        private object get_85_HamburgerButtonInfo_NavigationTransitionInfo(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.NavigationTransitionInfo;
        }
        private void set_85_HamburgerButtonInfo_NavigationTransitionInfo(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.NavigationTransitionInfo = (global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)Value;
        }
        private object get_86_HamburgerButtonInfo_Command(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.Command;
        }
        private void set_86_HamburgerButtonInfo_Command(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_87_HamburgerButtonInfo_ToolTip(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.ToolTip;
        }
        private void set_87_HamburgerButtonInfo_ToolTip(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.ToolTip = (global::System.Object)Value;
        }
        private object get_88_HamburgerButtonInfo_CommandParameter(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.CommandParameter;
        }
        private void set_88_HamburgerButtonInfo_CommandParameter(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_89_HamburgerButtonInfo_PageType(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.PageType;
        }
        private void set_89_HamburgerButtonInfo_PageType(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.PageType = (global::System.Type)Value;
        }
        private object get_90_HamburgerButtonInfo_PageParameter(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.PageParameter;
        }
        private void set_90_HamburgerButtonInfo_PageParameter(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.PageParameter = (global::System.Object)Value;
        }
        private object get_91_HamburgerButtonInfo_ClearHistory(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.ClearHistory;
        }
        private void set_91_HamburgerButtonInfo_ClearHistory(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.ClearHistory = (global::System.Boolean)Value;
        }
        private object get_92_HamburgerButtonInfo_ClearCache(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.ClearCache;
        }
        private void set_92_HamburgerButtonInfo_ClearCache(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.ClearCache = (global::System.Boolean)Value;
        }
        private object get_93_HamburgerButtonInfo_Visibility(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.Visibility;
        }
        private void set_93_HamburgerButtonInfo_Visibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.Visibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_94_HamburgerButtonInfo_IsEnabled(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.IsEnabled;
        }
        private void set_94_HamburgerButtonInfo_IsEnabled(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.IsEnabled = (global::System.Boolean)Value;
        }
        private object get_95_HamburgerButtonInfo_IsChecked(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.IsChecked;
        }
        private void set_95_HamburgerButtonInfo_IsChecked(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.IsChecked = (global::System.Nullable<global::System.Boolean>)Value;
        }
        private object get_96_HamburgerButtonInfo_MaxWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.MaxWidth;
        }
        private void set_96_HamburgerButtonInfo_MaxWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_97_HamburgerMenu_PaneBorderThickness(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.PaneBorderThickness;
        }
        private void set_97_HamburgerMenu_PaneBorderThickness(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.PaneBorderThickness = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_98_HamburgerMenu_SecondarySeparator(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.SecondarySeparator;
        }
        private void set_98_HamburgerMenu_SecondarySeparator(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.SecondarySeparator = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_99_HamburgerMenu_NavButtonBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonBackground;
        }
        private void set_99_HamburgerMenu_NavButtonBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_100_HamburgerMenu_NavButtonForeground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonForeground;
        }
        private void set_100_HamburgerMenu_NavButtonForeground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonForeground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_101_HamburgerMenu_NavAreaBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavAreaBackground;
        }
        private void set_101_HamburgerMenu_NavAreaBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavAreaBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_102_HamburgerMenu_HamburgerForeground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HamburgerForeground;
        }
        private void set_102_HamburgerMenu_HamburgerForeground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HamburgerForeground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_103_HamburgerMenu_HamburgerBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HamburgerBackground;
        }
        private void set_103_HamburgerMenu_HamburgerBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HamburgerBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_104_HamburgerMenu_VisualStateNarrowMinWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.VisualStateNarrowMinWidth;
        }
        private void set_104_HamburgerMenu_VisualStateNarrowMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.VisualStateNarrowMinWidth = (global::System.Double)Value;
        }
        private object get_105_HamburgerMenu_VisualStateNormalMinWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.VisualStateNormalMinWidth;
        }
        private void set_105_HamburgerMenu_VisualStateNormalMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.VisualStateNormalMinWidth = (global::System.Double)Value;
        }
        private object get_106_HamburgerMenu_VisualStateWideMinWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.VisualStateWideMinWidth;
        }
        private void set_106_HamburgerMenu_VisualStateWideMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.VisualStateWideMinWidth = (global::System.Double)Value;
        }
        private object get_107_HamburgerMenu_AccentColor(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.AccentColor;
        }
        private void set_107_HamburgerMenu_AccentColor(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.AccentColor = (global::Windows.UI.Color)Value;
        }
        private object get_108_HamburgerMenu_PaneBorderBrush(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.PaneBorderBrush;
        }
        private void set_108_HamburgerMenu_PaneBorderBrush(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.PaneBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_109_HamburgerMenu_NavButtonCheckedForeground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonCheckedForeground;
        }
        private void set_109_HamburgerMenu_NavButtonCheckedForeground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonCheckedForeground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_110_HamburgerMenu_NavButtonCheckedBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonCheckedBackground;
        }
        private void set_110_HamburgerMenu_NavButtonCheckedBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonCheckedBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_111_HamburgerMenu_NavButtonCheckedIndicatorBrush(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonCheckedIndicatorBrush;
        }
        private void set_111_HamburgerMenu_NavButtonCheckedIndicatorBrush(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonCheckedIndicatorBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_112_HamburgerMenu_NavButtonPressedForeground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonPressedForeground;
        }
        private void set_112_HamburgerMenu_NavButtonPressedForeground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonPressedForeground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_113_HamburgerMenu_NavButtonPressedBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonPressedBackground;
        }
        private void set_113_HamburgerMenu_NavButtonPressedBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonPressedBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_114_HamburgerMenu_NavButtonHoverForeground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonHoverForeground;
        }
        private void set_114_HamburgerMenu_NavButtonHoverForeground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonHoverForeground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_115_HamburgerMenu_NavButtonHoverBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonHoverBackground;
        }
        private void set_115_HamburgerMenu_NavButtonHoverBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonHoverBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_116_HamburgerMenu_HamburgerButtonVisibility(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HamburgerButtonVisibility;
        }
        private void set_116_HamburgerMenu_HamburgerButtonVisibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HamburgerButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_117_HamburgerMenu_DisplayMode(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.DisplayMode;
        }
        private void set_117_HamburgerMenu_DisplayMode(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.DisplayMode = (global::Windows.UI.Xaml.Controls.SplitViewDisplayMode)Value;
        }
        private object get_118_HamburgerMenu_VisualStateNarrowDisplayMode(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.VisualStateNarrowDisplayMode;
        }
        private void set_118_HamburgerMenu_VisualStateNarrowDisplayMode(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.VisualStateNarrowDisplayMode = (global::Windows.UI.Xaml.Controls.SplitViewDisplayMode)Value;
        }
        private object get_119_HamburgerMenu_VisualStateNormalDisplayMode(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.VisualStateNormalDisplayMode;
        }
        private void set_119_HamburgerMenu_VisualStateNormalDisplayMode(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.VisualStateNormalDisplayMode = (global::Windows.UI.Xaml.Controls.SplitViewDisplayMode)Value;
        }
        private object get_120_HamburgerMenu_VisualStateWideDisplayMode(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.VisualStateWideDisplayMode;
        }
        private void set_120_HamburgerMenu_VisualStateWideDisplayMode(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.VisualStateWideDisplayMode = (global::Windows.UI.Xaml.Controls.SplitViewDisplayMode)Value;
        }
        private object get_121_HamburgerMenu_SecondaryButtonOrientation(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.SecondaryButtonOrientation;
        }
        private void set_121_HamburgerMenu_SecondaryButtonOrientation(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.SecondaryButtonOrientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_122_HamburgerMenu_Selected(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.Selected;
        }
        private void set_122_HamburgerMenu_Selected(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.Selected = (global::Template10.Controls.HamburgerButtonInfo)Value;
        }
        private object get_123_HamburgerMenu_NavigationService(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavigationService;
        }
        private void set_123_HamburgerMenu_NavigationService(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavigationService = (global::Template10.Services.NavigationService.INavigationService)Value;
        }
        private object get_124_HamburgerMenu_IsFullScreen(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.IsFullScreen;
        }
        private void set_124_HamburgerMenu_IsFullScreen(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.IsFullScreen = (global::System.Boolean)Value;
        }
        private object get_125_HamburgerMenu_PaneWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.PaneWidth;
        }
        private void set_125_HamburgerMenu_PaneWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.PaneWidth = (global::System.Double)Value;
        }
        private object get_126_HamburgerMenu_HamburgerButtonGridWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HamburgerButtonGridWidth;
        }
        private void set_126_HamburgerMenu_HamburgerButtonGridWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HamburgerButtonGridWidth = (global::System.Double)Value;
        }
        private object get_127_HamburgerMenu_OpenCloseMode(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.OpenCloseMode;
        }
        private void set_127_HamburgerMenu_OpenCloseMode(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.OpenCloseMode = (global::Template10.Controls.HamburgerMenu.OpenCloseModes)Value;
        }
        private object get_128_HamburgerMenu_HeaderContent(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HeaderContent;
        }
        private void set_128_HamburgerMenu_HeaderContent(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HeaderContent = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_129_HamburgerMenu_IsOpen(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.IsOpen;
        }
        private void set_129_HamburgerMenu_IsOpen(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_130_HamburgerMenu_SecondaryButtons(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.SecondaryButtons;
        }
        private void set_130_HamburgerMenu_SecondaryButtons(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.SecondaryButtons = (global::System.Collections.ObjectModel.ObservableCollection<global::Template10.Controls.HamburgerButtonInfo>)Value;
        }
        private object get_131_HamburgerMenu_NavCommand(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavCommand;
        }
        private object get_132_HamburgerMenu_PropertyChangedHandlers(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.PropertyChangedHandlers;
        }
        private object get_133_Resizer_ElementControl(object instance)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            return that.ElementControl;
        }
        private void set_133_Resizer_ElementControl(object instance, object Value)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            that.ElementControl = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_134_Resizer_GrabberBrush(object instance)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            return that.GrabberBrush;
        }
        private void set_134_Resizer_GrabberBrush(object instance, object Value)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            that.GrabberBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_135_Resizer_GrabberVisibility(object instance)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            return that.GrabberVisibility;
        }
        private void set_135_Resizer_GrabberVisibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            that.GrabberVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_136_Resizer_GrabberSize(object instance)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            return that.GrabberSize;
        }
        private void set_136_Resizer_GrabberSize(object instance, object Value)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            that.GrabberSize = (global::Windows.Foundation.Size)Value;
        }
        private object get_137_Busy_BusyText(object instance)
        {
            var that = (global::TraxxPlayer.Views.Busy)instance;
            return that.BusyText;
        }
        private void set_137_Busy_BusyText(object instance, object Value)
        {
            var that = (global::TraxxPlayer.Views.Busy)instance;
            that.BusyText = (global::System.String)Value;
        }
        private object get_138_Busy_IsBusy(object instance)
        {
            var that = (global::TraxxPlayer.Views.Busy)instance;
            return that.IsBusy;
        }
        private void set_138_Busy_IsBusy(object instance, object Value)
        {
            var that = (global::TraxxPlayer.Views.Busy)instance;
            that.IsBusy = (global::System.Boolean)Value;
        }
        private object get_139_DetailPageViewModel_Value(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.DetailPageViewModel)instance;
            return that.Value;
        }
        private void set_139_DetailPageViewModel_Value(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.DetailPageViewModel)instance;
            that.Value = (global::System.String)Value;
        }
        private object get_140_MainPageViewModel_Value(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.MainPageViewModel)instance;
            return that.Value;
        }
        private void set_140_MainPageViewModel_Value(object instance, object Value)
        {
            var that = (global::TraxxPlayer.ViewModels.MainPageViewModel)instance;
            that.Value = (global::System.String)Value;
        }
        private object get_141_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_141_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_142_KeyBehavior_Actions(object instance)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            return that.Actions;
        }
        private object get_143_KeyBehavior_Key(object instance)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            return that.Key;
        }
        private void set_143_KeyBehavior_Key(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            that.Key = (global::Windows.System.VirtualKey)Value;
        }
        private object get_144_KeyBehavior_AssociatedObject(object instance)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_145_KeyBehavior_AndControl(object instance)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            return that.AndControl;
        }
        private void set_145_KeyBehavior_AndControl(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            that.AndControl = (global::System.Boolean)Value;
        }
        private object get_146_KeyBehavior_AndAlt(object instance)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            return that.AndAlt;
        }
        private void set_146_KeyBehavior_AndAlt(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            that.AndAlt = (global::System.Boolean)Value;
        }
        private object get_147_KeyBehavior_AndShift(object instance)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            return that.AndShift;
        }
        private void set_147_KeyBehavior_AndShift(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            that.AndShift = (global::System.Boolean)Value;
        }
        private object get_148_KeyBehavior_Event(object instance)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            return that.Event;
        }
        private void set_148_KeyBehavior_Event(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.KeyBehavior)instance;
            that.Event = (global::Template10.Behaviors.KeyBehavior.Kinds)Value;
        }
        private object get_149_EventTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_150_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_150_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_151_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_151_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_152_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior)instance;
            return that.AssociatedObject;
        }
        private object get_153_FocusAction_TargetObject(object instance)
        {
            var that = (global::Template10.Behaviors.FocusAction)instance;
            return that.TargetObject;
        }
        private void set_153_FocusAction_TargetObject(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.FocusAction)instance;
            that.TargetObject = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_154_CallMethodAction_MethodName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.CallMethodAction)instance;
            return that.MethodName;
        }
        private void set_154_CallMethodAction_MethodName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.CallMethodAction)instance;
            that.MethodName = (global::System.String)Value;
        }
        private object get_155_CallMethodAction_TargetObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.CallMethodAction)instance;
            return that.TargetObject;
        }
        private void set_155_CallMethodAction_TargetObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.CallMethodAction)instance;
            that.TargetObject = (global::System.Object)Value;
        }
        private object get_156_SettingsPageViewModel_SettingsPartViewModel(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.SettingsPageViewModel)instance;
            return that.SettingsPartViewModel;
        }
        private object get_157_SettingsPageViewModel_AboutPartViewModel(object instance)
        {
            var that = (global::TraxxPlayer.ViewModels.SettingsPageViewModel)instance;
            return that.AboutPartViewModel;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember xamlMember = null;
            global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Template10.Common.BootStrapper.SessionState":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "SessionState", "Template10.Common.StateItems");
                xamlMember.Getter = get_0_BootStrapper_SessionState;
                xamlMember.Setter = set_0_BootStrapper_SessionState;
                break;
            case "Template10.Common.BootStrapper.NavigationService":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavigationService", "Template10.Services.NavigationService.INavigationService");
                xamlMember.Getter = get_1_BootStrapper_NavigationService;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.SplashFactory":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "SplashFactory", "System.Func`2<Windows.ApplicationModel.Activation.SplashScreen, Windows.UI.Xaml.Controls.UserControl>");
                xamlMember.Getter = get_2_BootStrapper_SplashFactory;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.CacheMaxDuration":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "CacheMaxDuration", "TimeSpan");
                xamlMember.Getter = get_3_BootStrapper_CacheMaxDuration;
                xamlMember.Setter = set_3_BootStrapper_CacheMaxDuration;
                break;
            case "Template10.Common.BootStrapper.ShowShellBackButton":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ShowShellBackButton", "Boolean");
                xamlMember.Getter = get_4_BootStrapper_ShowShellBackButton;
                xamlMember.Setter = set_4_BootStrapper_ShowShellBackButton;
                break;
            case "Template10.Common.BootStrapper.ForceShowShellBackButton":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ForceShowShellBackButton", "Boolean");
                xamlMember.Getter = get_5_BootStrapper_ForceShowShellBackButton;
                xamlMember.Setter = set_5_BootStrapper_ForceShowShellBackButton;
                break;
            case "Template10.Common.BootStrapper.OriginalActivatedArgs":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "OriginalActivatedArgs", "Windows.ApplicationModel.Activation.IActivatedEventArgs");
                xamlMember.Getter = get_6_BootStrapper_OriginalActivatedArgs;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.EnableAutoRestoreAfterTerminated":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "EnableAutoRestoreAfterTerminated", "Boolean");
                xamlMember.Getter = get_7_BootStrapper_EnableAutoRestoreAfterTerminated;
                xamlMember.Setter = set_7_BootStrapper_EnableAutoRestoreAfterTerminated;
                break;
            case "Template10.Common.BootStrapper.CurrentState":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "CurrentState", "Template10.Common.BootStrapper.States");
                xamlMember.Getter = get_8_BootStrapper_CurrentState;
                xamlMember.Setter = set_8_BootStrapper_CurrentState;
                break;
            case "Template10.Common.BootStrapper.ModalDialog":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ModalDialog", "Template10.Controls.ModalDialog");
                xamlMember.Getter = get_9_BootStrapper_ModalDialog;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.ModalContent":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ModalContent", "Windows.UI.Xaml.UIElement");
                xamlMember.Getter = get_10_BootStrapper_ModalContent;
                xamlMember.Setter = set_10_BootStrapper_ModalContent;
                break;
            case "TraxxPlayer.ViewModels.LikesViewModel.Likes":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.LikesViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Likes", "System.Collections.ObjectModel.ObservableCollection`1<BackgroundAudioShared.SoundCloudTrack>");
                xamlMember.Getter = get_11_LikesViewModel_Likes;
                xamlMember.Setter = set_11_LikesViewModel_Likes;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.id":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_12_SoundCloudTrack_id;
                xamlMember.Setter = set_12_SoundCloudTrack_id;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.created_at":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "created_at", "String");
                xamlMember.Getter = get_13_SoundCloudTrack_created_at;
                xamlMember.Setter = set_13_SoundCloudTrack_created_at;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.user_id":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "user_id", "Int32");
                xamlMember.Getter = get_14_SoundCloudTrack_user_id;
                xamlMember.Setter = set_14_SoundCloudTrack_user_id;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.duration":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "duration", "Int32");
                xamlMember.Getter = get_15_SoundCloudTrack_duration;
                xamlMember.Setter = set_15_SoundCloudTrack_duration;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.commentable":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "commentable", "Boolean");
                xamlMember.Getter = get_16_SoundCloudTrack_commentable;
                xamlMember.Setter = set_16_SoundCloudTrack_commentable;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.state":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "state", "String");
                xamlMember.Getter = get_17_SoundCloudTrack_state;
                xamlMember.Setter = set_17_SoundCloudTrack_state;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.sharing":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "sharing", "String");
                xamlMember.Getter = get_18_SoundCloudTrack_sharing;
                xamlMember.Setter = set_18_SoundCloudTrack_sharing;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.tag_list":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "tag_list", "String");
                xamlMember.Getter = get_19_SoundCloudTrack_tag_list;
                xamlMember.Setter = set_19_SoundCloudTrack_tag_list;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.permalink":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "permalink", "String");
                xamlMember.Getter = get_20_SoundCloudTrack_permalink;
                xamlMember.Setter = set_20_SoundCloudTrack_permalink;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.description":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "description", "Object");
                xamlMember.Getter = get_21_SoundCloudTrack_description;
                xamlMember.Setter = set_21_SoundCloudTrack_description;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.streamable":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "streamable", "Boolean");
                xamlMember.Getter = get_22_SoundCloudTrack_streamable;
                xamlMember.Setter = set_22_SoundCloudTrack_streamable;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.downloadable":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "downloadable", "Boolean");
                xamlMember.Getter = get_23_SoundCloudTrack_downloadable;
                xamlMember.Setter = set_23_SoundCloudTrack_downloadable;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.genre":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "genre", "Object");
                xamlMember.Getter = get_24_SoundCloudTrack_genre;
                xamlMember.Setter = set_24_SoundCloudTrack_genre;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.release":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "release", "Object");
                xamlMember.Getter = get_25_SoundCloudTrack_release;
                xamlMember.Setter = set_25_SoundCloudTrack_release;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.purchase_url":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "purchase_url", "Object");
                xamlMember.Getter = get_26_SoundCloudTrack_purchase_url;
                xamlMember.Setter = set_26_SoundCloudTrack_purchase_url;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.label_id":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "label_id", "Object");
                xamlMember.Getter = get_27_SoundCloudTrack_label_id;
                xamlMember.Setter = set_27_SoundCloudTrack_label_id;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.label_name":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "label_name", "Object");
                xamlMember.Getter = get_28_SoundCloudTrack_label_name;
                xamlMember.Setter = set_28_SoundCloudTrack_label_name;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.isrc":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "isrc", "Object");
                xamlMember.Getter = get_29_SoundCloudTrack_isrc;
                xamlMember.Setter = set_29_SoundCloudTrack_isrc;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.video_url":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "video_url", "Object");
                xamlMember.Getter = get_30_SoundCloudTrack_video_url;
                xamlMember.Setter = set_30_SoundCloudTrack_video_url;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.track_type":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "track_type", "String");
                xamlMember.Getter = get_31_SoundCloudTrack_track_type;
                xamlMember.Setter = set_31_SoundCloudTrack_track_type;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.key_signature":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "key_signature", "Object");
                xamlMember.Getter = get_32_SoundCloudTrack_key_signature;
                xamlMember.Setter = set_32_SoundCloudTrack_key_signature;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.bpm":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "bpm", "Object");
                xamlMember.Getter = get_33_SoundCloudTrack_bpm;
                xamlMember.Setter = set_33_SoundCloudTrack_bpm;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.title":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "title", "String");
                xamlMember.Getter = get_34_SoundCloudTrack_title;
                xamlMember.Setter = set_34_SoundCloudTrack_title;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.release_year":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "release_year", "Object");
                xamlMember.Getter = get_35_SoundCloudTrack_release_year;
                xamlMember.Setter = set_35_SoundCloudTrack_release_year;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.release_month":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "release_month", "Object");
                xamlMember.Getter = get_36_SoundCloudTrack_release_month;
                xamlMember.Setter = set_36_SoundCloudTrack_release_month;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.release_day":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "release_day", "Object");
                xamlMember.Getter = get_37_SoundCloudTrack_release_day;
                xamlMember.Setter = set_37_SoundCloudTrack_release_day;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.original_format":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "original_format", "String");
                xamlMember.Getter = get_38_SoundCloudTrack_original_format;
                xamlMember.Setter = set_38_SoundCloudTrack_original_format;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.original_content_size":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "original_content_size", "Int32");
                xamlMember.Getter = get_39_SoundCloudTrack_original_content_size;
                xamlMember.Setter = set_39_SoundCloudTrack_original_content_size;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.license":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "license", "String");
                xamlMember.Getter = get_40_SoundCloudTrack_license;
                xamlMember.Setter = set_40_SoundCloudTrack_license;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.uri":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "uri", "String");
                xamlMember.Getter = get_41_SoundCloudTrack_uri;
                xamlMember.Setter = set_41_SoundCloudTrack_uri;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.permalink_url":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "permalink_url", "String");
                xamlMember.Getter = get_42_SoundCloudTrack_permalink_url;
                xamlMember.Setter = set_42_SoundCloudTrack_permalink_url;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.artwork_url":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "artwork_url", "Object");
                xamlMember.Getter = get_43_SoundCloudTrack_artwork_url;
                xamlMember.Setter = set_43_SoundCloudTrack_artwork_url;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.waveform_url":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "waveform_url", "String");
                xamlMember.Getter = get_44_SoundCloudTrack_waveform_url;
                xamlMember.Setter = set_44_SoundCloudTrack_waveform_url;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.user":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "user", "BackgroundAudioShared.SoundCloudUser");
                xamlMember.Getter = get_45_SoundCloudTrack_user;
                xamlMember.Setter = set_45_SoundCloudTrack_user;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.stream_url":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "stream_url", "String");
                xamlMember.Getter = get_46_SoundCloudTrack_stream_url;
                xamlMember.Setter = set_46_SoundCloudTrack_stream_url;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.download_url":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "download_url", "String");
                xamlMember.Getter = get_47_SoundCloudTrack_download_url;
                xamlMember.Setter = set_47_SoundCloudTrack_download_url;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.playback_count":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "playback_count", "Int32");
                xamlMember.Getter = get_48_SoundCloudTrack_playback_count;
                xamlMember.Setter = set_48_SoundCloudTrack_playback_count;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.download_count":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "download_count", "Int32");
                xamlMember.Getter = get_49_SoundCloudTrack_download_count;
                xamlMember.Setter = set_49_SoundCloudTrack_download_count;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.favoritings_count":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "favoritings_count", "Int32");
                xamlMember.Getter = get_50_SoundCloudTrack_favoritings_count;
                xamlMember.Setter = set_50_SoundCloudTrack_favoritings_count;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.comment_count":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "comment_count", "Int32");
                xamlMember.Getter = get_51_SoundCloudTrack_comment_count;
                xamlMember.Setter = set_51_SoundCloudTrack_comment_count;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.created_with":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "created_with", "BackgroundAudioShared.SoundCloudCreatedWith");
                xamlMember.Getter = get_52_SoundCloudTrack_created_with;
                xamlMember.Setter = set_52_SoundCloudTrack_created_with;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.attachments_uri":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "attachments_uri", "String");
                xamlMember.Getter = get_53_SoundCloudTrack_attachments_uri;
                xamlMember.Setter = set_53_SoundCloudTrack_attachments_uri;
                break;
            case "BackgroundAudioShared.SoundCloudTrack.AlbumArtUri":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BackgroundAudioShared.SoundCloudTrack");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AlbumArtUri", "String");
                xamlMember.Getter = get_54_SoundCloudTrack_AlbumArtUri;
                xamlMember.Setter = set_54_SoundCloudTrack_AlbumArtUri;
                break;
            case "Template10.Mvvm.ViewModelBase.NavigationService":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Mvvm.ViewModelBase");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavigationService", "Template10.Services.NavigationService.INavigationService");
                xamlMember.Getter = get_55_ViewModelBase_NavigationService;
                xamlMember.Setter = set_55_ViewModelBase_NavigationService;
                break;
            case "Template10.Mvvm.ViewModelBase.Dispatcher":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Mvvm.ViewModelBase");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Dispatcher", "Template10.Common.IDispatcherWrapper");
                xamlMember.Getter = get_56_ViewModelBase_Dispatcher;
                xamlMember.Setter = set_56_ViewModelBase_Dispatcher;
                break;
            case "Template10.Mvvm.ViewModelBase.SessionState":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Mvvm.ViewModelBase");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "SessionState", "Template10.Common.IStateItems");
                xamlMember.Getter = get_57_ViewModelBase_SessionState;
                xamlMember.Setter = set_57_ViewModelBase_SessionState;
                break;
            case "Template10.Controls.PageHeader.Frame":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Frame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_PageHeader_Frame;
                xamlMember.Setter = set_58_PageHeader_Frame;
                break;
            case "Template10.Controls.PageHeader.Text":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_PageHeader_Text;
                xamlMember.Setter = set_59_PageHeader_Text;
                break;
            case "Template10.Controls.PageHeader.EllipsisVisibility":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "EllipsisVisibility", "Template10.Behaviors.EllipsisBehavior.Visibilities");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_PageHeader_EllipsisVisibility;
                xamlMember.Setter = set_60_PageHeader_EllipsisVisibility;
                break;
            case "Template10.Controls.PageHeader.PrimaryCommandsVisibility":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "PrimaryCommandsVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_PageHeader_PrimaryCommandsVisibility;
                xamlMember.Setter = set_61_PageHeader_PrimaryCommandsVisibility;
                break;
            case "Template10.Controls.PageHeader.BackButtonVisibility":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "BackButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_PageHeader_BackButtonVisibility;
                xamlMember.Setter = set_62_PageHeader_BackButtonVisibility;
                break;
            case "Template10.Controls.PageHeader.BackButtonContent":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "BackButtonContent", "Windows.UI.Xaml.Controls.Symbol");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_PageHeader_BackButtonContent;
                xamlMember.Setter = set_63_PageHeader_BackButtonContent;
                break;
            case "Template10.Controls.PageHeader.EnableHamburgerMenuAutoLayout":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "EnableHamburgerMenuAutoLayout", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_PageHeader_EnableHamburgerMenuAutoLayout;
                xamlMember.Setter = set_64_PageHeader_EnableHamburgerMenuAutoLayout;
                break;
            case "Template10.Controls.PageHeader.VisualStateNarrowMinWidth":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "VisualStateNarrowMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_PageHeader_VisualStateNarrowMinWidth;
                xamlMember.Setter = set_65_PageHeader_VisualStateNarrowMinWidth;
                break;
            case "Template10.Controls.PageHeader.VisualStateNormalMinWidth":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "VisualStateNormalMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_PageHeader_VisualStateNormalMinWidth;
                xamlMember.Setter = set_66_PageHeader_VisualStateNormalMinWidth;
                break;
            case "TraxxPlayer.ViewModels.MeViewModel.FirstName":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.MeViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "FirstName", "String");
                xamlMember.Getter = get_67_MeViewModel_FirstName;
                xamlMember.Setter = set_67_MeViewModel_FirstName;
                break;
            case "TraxxPlayer.ViewModels.MeViewModel.LastName":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.MeViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "LastName", "String");
                xamlMember.Getter = get_68_MeViewModel_LastName;
                xamlMember.Setter = set_68_MeViewModel_LastName;
                break;
            case "TraxxPlayer.ViewModels.MeViewModel.Website":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.MeViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Website", "String");
                xamlMember.Getter = get_69_MeViewModel_Website;
                xamlMember.Setter = set_69_MeViewModel_Website;
                break;
            case "TraxxPlayer.ViewModels.MeViewModel.City":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.MeViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "City", "String");
                xamlMember.Getter = get_70_MeViewModel_City;
                xamlMember.Setter = set_70_MeViewModel_City;
                break;
            case "TraxxPlayer.ViewModels.MeViewModel.Country":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.MeViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Country", "String");
                xamlMember.Getter = get_71_MeViewModel_Country;
                xamlMember.Setter = set_71_MeViewModel_Country;
                break;
            case "TraxxPlayer.ViewModels.MeViewModel.Followers":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.MeViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Followers", "String");
                xamlMember.Getter = get_72_MeViewModel_Followers;
                xamlMember.Setter = set_72_MeViewModel_Followers;
                break;
            case "TraxxPlayer.ViewModels.MeViewModel.Following":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.MeViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Following", "String");
                xamlMember.Getter = get_73_MeViewModel_Following;
                xamlMember.Setter = set_73_MeViewModel_Following;
                break;
            case "TraxxPlayer.ViewModels.MeViewModel.ProfilePhoto":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.MeViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ProfilePhoto", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_74_MeViewModel_ProfilePhoto;
                xamlMember.Setter = set_74_MeViewModel_ProfilePhoto;
                break;
            case "TraxxPlayer.ViewModels.NowPlayingViewModel.AlbumImage":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.NowPlayingViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AlbumImage", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_75_NowPlayingViewModel_AlbumImage;
                xamlMember.Setter = set_75_NowPlayingViewModel_AlbumImage;
                break;
            case "TraxxPlayer.ViewModels.NowPlayingViewModel.SongName":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.NowPlayingViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "SongName", "String");
                xamlMember.Getter = get_76_NowPlayingViewModel_SongName;
                xamlMember.Setter = set_76_NowPlayingViewModel_SongName;
                break;
            case "TraxxPlayer.ViewModels.NowPlayingViewModel.AlbumTitle":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.NowPlayingViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AlbumTitle", "String");
                xamlMember.Getter = get_77_NowPlayingViewModel_AlbumTitle;
                xamlMember.Setter = set_77_NowPlayingViewModel_AlbumTitle;
                break;
            case "Windows.UI.Color.A":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_78_Color_A;
                xamlMember.Setter = set_78_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_79_Color_B;
                xamlMember.Setter = set_79_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_80_Color_G;
                xamlMember.Setter = set_80_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_81_Color_R;
                xamlMember.Setter = set_81_Color_R;
                break;
            case "Template10.Controls.HamburgerMenu.PrimaryButtons":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "PrimaryButtons", "System.Collections.ObjectModel.ObservableCollection`1<Template10.Controls.HamburgerButtonInfo>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_HamburgerMenu_PrimaryButtons;
                xamlMember.Setter = set_82_HamburgerMenu_PrimaryButtons;
                break;
            case "Template10.Controls.HamburgerButtonInfo.Content":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Content", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_HamburgerButtonInfo_Content;
                xamlMember.Setter = set_83_HamburgerButtonInfo_Content;
                break;
            case "Template10.Controls.HamburgerButtonInfo.ButtonType":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ButtonType", "Template10.Controls.HamburgerButtonInfo.ButtonTypes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_HamburgerButtonInfo_ButtonType;
                xamlMember.Setter = set_84_HamburgerButtonInfo_ButtonType;
                break;
            case "Template10.Controls.HamburgerButtonInfo.NavigationTransitionInfo":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavigationTransitionInfo", "Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_HamburgerButtonInfo_NavigationTransitionInfo;
                xamlMember.Setter = set_85_HamburgerButtonInfo_NavigationTransitionInfo;
                break;
            case "Template10.Controls.HamburgerButtonInfo.Command":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_HamburgerButtonInfo_Command;
                xamlMember.Setter = set_86_HamburgerButtonInfo_Command;
                break;
            case "Template10.Controls.HamburgerButtonInfo.ToolTip":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ToolTip", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_HamburgerButtonInfo_ToolTip;
                xamlMember.Setter = set_87_HamburgerButtonInfo_ToolTip;
                break;
            case "Template10.Controls.HamburgerButtonInfo.CommandParameter":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_HamburgerButtonInfo_CommandParameter;
                xamlMember.Setter = set_88_HamburgerButtonInfo_CommandParameter;
                break;
            case "Template10.Controls.HamburgerButtonInfo.PageType":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "PageType", "System.Type");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_HamburgerButtonInfo_PageType;
                xamlMember.Setter = set_89_HamburgerButtonInfo_PageType;
                break;
            case "Template10.Controls.HamburgerButtonInfo.PageParameter":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "PageParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_HamburgerButtonInfo_PageParameter;
                xamlMember.Setter = set_90_HamburgerButtonInfo_PageParameter;
                break;
            case "Template10.Controls.HamburgerButtonInfo.ClearHistory":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ClearHistory", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_HamburgerButtonInfo_ClearHistory;
                xamlMember.Setter = set_91_HamburgerButtonInfo_ClearHistory;
                break;
            case "Template10.Controls.HamburgerButtonInfo.ClearCache":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ClearCache", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_HamburgerButtonInfo_ClearCache;
                xamlMember.Setter = set_92_HamburgerButtonInfo_ClearCache;
                break;
            case "Template10.Controls.HamburgerButtonInfo.Visibility":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Visibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_HamburgerButtonInfo_Visibility;
                xamlMember.Setter = set_93_HamburgerButtonInfo_Visibility;
                break;
            case "Template10.Controls.HamburgerButtonInfo.IsEnabled":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "IsEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_HamburgerButtonInfo_IsEnabled;
                xamlMember.Setter = set_94_HamburgerButtonInfo_IsEnabled;
                break;
            case "Template10.Controls.HamburgerButtonInfo.IsChecked":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "IsChecked", "System.Nullable`1<Boolean>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_HamburgerButtonInfo_IsChecked;
                xamlMember.Setter = set_95_HamburgerButtonInfo_IsChecked;
                break;
            case "Template10.Controls.HamburgerButtonInfo.MaxWidth":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_HamburgerButtonInfo_MaxWidth;
                xamlMember.Setter = set_96_HamburgerButtonInfo_MaxWidth;
                break;
            case "Template10.Controls.HamburgerMenu.PaneBorderThickness":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "PaneBorderThickness", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_HamburgerMenu_PaneBorderThickness;
                xamlMember.Setter = set_97_HamburgerMenu_PaneBorderThickness;
                break;
            case "Template10.Controls.HamburgerMenu.SecondarySeparator":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "SecondarySeparator", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_HamburgerMenu_SecondarySeparator;
                xamlMember.Setter = set_98_HamburgerMenu_SecondarySeparator;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonBackground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavButtonBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_HamburgerMenu_NavButtonBackground;
                xamlMember.Setter = set_99_HamburgerMenu_NavButtonBackground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonForeground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavButtonForeground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_HamburgerMenu_NavButtonForeground;
                xamlMember.Setter = set_100_HamburgerMenu_NavButtonForeground;
                break;
            case "Template10.Controls.HamburgerMenu.NavAreaBackground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavAreaBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_HamburgerMenu_NavAreaBackground;
                xamlMember.Setter = set_101_HamburgerMenu_NavAreaBackground;
                break;
            case "Template10.Controls.HamburgerMenu.HamburgerForeground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "HamburgerForeground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_HamburgerMenu_HamburgerForeground;
                xamlMember.Setter = set_102_HamburgerMenu_HamburgerForeground;
                break;
            case "Template10.Controls.HamburgerMenu.HamburgerBackground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "HamburgerBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_HamburgerMenu_HamburgerBackground;
                xamlMember.Setter = set_103_HamburgerMenu_HamburgerBackground;
                break;
            case "Template10.Controls.HamburgerMenu.VisualStateNarrowMinWidth":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "VisualStateNarrowMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_HamburgerMenu_VisualStateNarrowMinWidth;
                xamlMember.Setter = set_104_HamburgerMenu_VisualStateNarrowMinWidth;
                break;
            case "Template10.Controls.HamburgerMenu.VisualStateNormalMinWidth":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "VisualStateNormalMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_HamburgerMenu_VisualStateNormalMinWidth;
                xamlMember.Setter = set_105_HamburgerMenu_VisualStateNormalMinWidth;
                break;
            case "Template10.Controls.HamburgerMenu.VisualStateWideMinWidth":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "VisualStateWideMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_HamburgerMenu_VisualStateWideMinWidth;
                xamlMember.Setter = set_106_HamburgerMenu_VisualStateWideMinWidth;
                break;
            case "Template10.Controls.HamburgerMenu.AccentColor":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AccentColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_HamburgerMenu_AccentColor;
                xamlMember.Setter = set_107_HamburgerMenu_AccentColor;
                break;
            case "Template10.Controls.HamburgerMenu.PaneBorderBrush":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "PaneBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_HamburgerMenu_PaneBorderBrush;
                xamlMember.Setter = set_108_HamburgerMenu_PaneBorderBrush;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonCheckedForeground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavButtonCheckedForeground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_HamburgerMenu_NavButtonCheckedForeground;
                xamlMember.Setter = set_109_HamburgerMenu_NavButtonCheckedForeground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonCheckedBackground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavButtonCheckedBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_HamburgerMenu_NavButtonCheckedBackground;
                xamlMember.Setter = set_110_HamburgerMenu_NavButtonCheckedBackground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonCheckedIndicatorBrush":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavButtonCheckedIndicatorBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_HamburgerMenu_NavButtonCheckedIndicatorBrush;
                xamlMember.Setter = set_111_HamburgerMenu_NavButtonCheckedIndicatorBrush;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonPressedForeground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavButtonPressedForeground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_HamburgerMenu_NavButtonPressedForeground;
                xamlMember.Setter = set_112_HamburgerMenu_NavButtonPressedForeground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonPressedBackground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavButtonPressedBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_HamburgerMenu_NavButtonPressedBackground;
                xamlMember.Setter = set_113_HamburgerMenu_NavButtonPressedBackground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonHoverForeground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavButtonHoverForeground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_HamburgerMenu_NavButtonHoverForeground;
                xamlMember.Setter = set_114_HamburgerMenu_NavButtonHoverForeground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonHoverBackground":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavButtonHoverBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_HamburgerMenu_NavButtonHoverBackground;
                xamlMember.Setter = set_115_HamburgerMenu_NavButtonHoverBackground;
                break;
            case "Template10.Controls.HamburgerMenu.HamburgerButtonVisibility":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "HamburgerButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_HamburgerMenu_HamburgerButtonVisibility;
                xamlMember.Setter = set_116_HamburgerMenu_HamburgerButtonVisibility;
                break;
            case "Template10.Controls.HamburgerMenu.DisplayMode":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "DisplayMode", "Windows.UI.Xaml.Controls.SplitViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_HamburgerMenu_DisplayMode;
                xamlMember.Setter = set_117_HamburgerMenu_DisplayMode;
                break;
            case "Template10.Controls.HamburgerMenu.VisualStateNarrowDisplayMode":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "VisualStateNarrowDisplayMode", "Windows.UI.Xaml.Controls.SplitViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_HamburgerMenu_VisualStateNarrowDisplayMode;
                xamlMember.Setter = set_118_HamburgerMenu_VisualStateNarrowDisplayMode;
                break;
            case "Template10.Controls.HamburgerMenu.VisualStateNormalDisplayMode":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "VisualStateNormalDisplayMode", "Windows.UI.Xaml.Controls.SplitViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_HamburgerMenu_VisualStateNormalDisplayMode;
                xamlMember.Setter = set_119_HamburgerMenu_VisualStateNormalDisplayMode;
                break;
            case "Template10.Controls.HamburgerMenu.VisualStateWideDisplayMode":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "VisualStateWideDisplayMode", "Windows.UI.Xaml.Controls.SplitViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_HamburgerMenu_VisualStateWideDisplayMode;
                xamlMember.Setter = set_120_HamburgerMenu_VisualStateWideDisplayMode;
                break;
            case "Template10.Controls.HamburgerMenu.SecondaryButtonOrientation":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "SecondaryButtonOrientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_HamburgerMenu_SecondaryButtonOrientation;
                xamlMember.Setter = set_121_HamburgerMenu_SecondaryButtonOrientation;
                break;
            case "Template10.Controls.HamburgerMenu.Selected":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Selected", "Template10.Controls.HamburgerButtonInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_HamburgerMenu_Selected;
                xamlMember.Setter = set_122_HamburgerMenu_Selected;
                break;
            case "Template10.Controls.HamburgerMenu.NavigationService":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavigationService", "Template10.Services.NavigationService.INavigationService");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_HamburgerMenu_NavigationService;
                xamlMember.Setter = set_123_HamburgerMenu_NavigationService;
                break;
            case "Template10.Controls.HamburgerMenu.IsFullScreen":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "IsFullScreen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_HamburgerMenu_IsFullScreen;
                xamlMember.Setter = set_124_HamburgerMenu_IsFullScreen;
                break;
            case "Template10.Controls.HamburgerMenu.PaneWidth":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "PaneWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_HamburgerMenu_PaneWidth;
                xamlMember.Setter = set_125_HamburgerMenu_PaneWidth;
                break;
            case "Template10.Controls.HamburgerMenu.HamburgerButtonGridWidth":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "HamburgerButtonGridWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_HamburgerMenu_HamburgerButtonGridWidth;
                xamlMember.Setter = set_126_HamburgerMenu_HamburgerButtonGridWidth;
                break;
            case "Template10.Controls.HamburgerMenu.OpenCloseMode":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "OpenCloseMode", "Template10.Controls.HamburgerMenu.OpenCloseModes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_HamburgerMenu_OpenCloseMode;
                xamlMember.Setter = set_127_HamburgerMenu_OpenCloseMode;
                break;
            case "Template10.Controls.HamburgerMenu.HeaderContent":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "HeaderContent", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_HamburgerMenu_HeaderContent;
                xamlMember.Setter = set_128_HamburgerMenu_HeaderContent;
                break;
            case "Template10.Controls.HamburgerMenu.IsOpen":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_HamburgerMenu_IsOpen;
                xamlMember.Setter = set_129_HamburgerMenu_IsOpen;
                break;
            case "Template10.Controls.HamburgerMenu.SecondaryButtons":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "SecondaryButtons", "System.Collections.ObjectModel.ObservableCollection`1<Template10.Controls.HamburgerButtonInfo>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_HamburgerMenu_SecondaryButtons;
                xamlMember.Setter = set_130_HamburgerMenu_SecondaryButtons;
                break;
            case "Template10.Controls.HamburgerMenu.NavCommand":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "NavCommand", "Template10.Mvvm.DelegateCommand`1<Template10.Controls.HamburgerButtonInfo>");
                xamlMember.Getter = get_131_HamburgerMenu_NavCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Controls.HamburgerMenu.PropertyChangedHandlers":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "PropertyChangedHandlers", "Object");
                xamlMember.Getter = get_132_HamburgerMenu_PropertyChangedHandlers;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Controls.Resizer.ElementControl":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.Resizer");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "ElementControl", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_Resizer_ElementControl;
                xamlMember.Setter = set_133_Resizer_ElementControl;
                break;
            case "Template10.Controls.Resizer.GrabberBrush":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.Resizer");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "GrabberBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_Resizer_GrabberBrush;
                xamlMember.Setter = set_134_Resizer_GrabberBrush;
                break;
            case "Template10.Controls.Resizer.GrabberVisibility":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.Resizer");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "GrabberVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_Resizer_GrabberVisibility;
                xamlMember.Setter = set_135_Resizer_GrabberVisibility;
                break;
            case "Template10.Controls.Resizer.GrabberSize":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.Resizer");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "GrabberSize", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_Resizer_GrabberSize;
                xamlMember.Setter = set_136_Resizer_GrabberSize;
                break;
            case "TraxxPlayer.Views.Busy.BusyText":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.Views.Busy");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "BusyText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_Busy_BusyText;
                xamlMember.Setter = set_137_Busy_BusyText;
                break;
            case "TraxxPlayer.Views.Busy.IsBusy":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.Views.Busy");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "IsBusy", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_Busy_IsBusy;
                xamlMember.Setter = set_138_Busy_IsBusy;
                break;
            case "TraxxPlayer.ViewModels.DetailPageViewModel.Value":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.DetailPageViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Value", "String");
                xamlMember.Getter = get_139_DetailPageViewModel_Value;
                xamlMember.Setter = set_139_DetailPageViewModel_Value;
                break;
            case "TraxxPlayer.ViewModels.MainPageViewModel.Value":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.MainPageViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Value", "String");
                xamlMember.Getter = get_140_MainPageViewModel_Value;
                xamlMember.Setter = set_140_MainPageViewModel_Value;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_141_Interaction_Behaviors;
                xamlMember.Setter = set_141_Interaction_Behaviors;
                break;
            case "Template10.Behaviors.KeyBehavior.Actions":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.KeyBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_KeyBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Behaviors.KeyBehavior.Key":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.KeyBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Key", "Windows.System.VirtualKey");
                xamlMember.Getter = get_143_KeyBehavior_Key;
                xamlMember.Setter = set_143_KeyBehavior_Key;
                break;
            case "Template10.Behaviors.KeyBehavior.AssociatedObject":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.KeyBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_144_KeyBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Behaviors.KeyBehavior.AndControl":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.KeyBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AndControl", "Boolean");
                xamlMember.Getter = get_145_KeyBehavior_AndControl;
                xamlMember.Setter = set_145_KeyBehavior_AndControl;
                break;
            case "Template10.Behaviors.KeyBehavior.AndAlt":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.KeyBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AndAlt", "Boolean");
                xamlMember.Getter = get_146_KeyBehavior_AndAlt;
                xamlMember.Setter = set_146_KeyBehavior_AndAlt;
                break;
            case "Template10.Behaviors.KeyBehavior.AndShift":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.KeyBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AndShift", "Boolean");
                xamlMember.Getter = get_147_KeyBehavior_AndShift;
                xamlMember.Setter = set_147_KeyBehavior_AndShift;
                break;
            case "Template10.Behaviors.KeyBehavior.Event":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.KeyBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Event", "Template10.Behaviors.KeyBehavior.Kinds");
                xamlMember.Getter = get_148_KeyBehavior_Event;
                xamlMember.Setter = set_148_KeyBehavior_Event;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_EventTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_150_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_151_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior.AssociatedObject":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_152_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Behaviors.FocusAction.TargetObject":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.FocusAction");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "TargetObject", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_FocusAction_TargetObject;
                xamlMember.Setter = set_153_FocusAction_TargetObject;
                break;
            case "Microsoft.Xaml.Interactions.Core.CallMethodAction.MethodName":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.CallMethodAction");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "MethodName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_CallMethodAction_MethodName;
                xamlMember.Setter = set_154_CallMethodAction_MethodName;
                break;
            case "Microsoft.Xaml.Interactions.Core.CallMethodAction.TargetObject":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.CallMethodAction");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "TargetObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_CallMethodAction_TargetObject;
                xamlMember.Setter = set_155_CallMethodAction_TargetObject;
                break;
            case "TraxxPlayer.ViewModels.SettingsPageViewModel.SettingsPartViewModel":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.SettingsPageViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "SettingsPartViewModel", "TraxxPlayer.ViewModels.SettingsPartViewModel");
                xamlMember.Getter = get_156_SettingsPageViewModel_SettingsPartViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TraxxPlayer.ViewModels.SettingsPageViewModel.AboutPartViewModel":
                userType = (global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TraxxPlayer.ViewModels.SettingsPageViewModel");
                xamlMember = new global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlMember(this, "AboutPartViewModel", "TraxxPlayer.ViewModels.AboutPartViewModel");
                xamlMember.Getter = get_157_SettingsPageViewModel_AboutPartViewModel;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlSystemBaseType
    {
        global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::TraxxPlayer.TraxxPlayer_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

